//----------------------
// <auto-generated>
//     Generated by StaticDelegateGenerator.  DO NOT EDIT!
// </auto-generated>
//----------------------
namespace Burst.Compiler.IL.Tests
{
    using System;
    using System.Runtime.InteropServices;

    internal static partial class StaticDelegateRegistry
    {
        static StaticDelegateRegistry()
        {
            Register(typeof(Burst.Compiler.IL.Tests.Pointers.MyCastEnum),  new Type[] {typeof(int), typeof(Burst.Compiler.IL.Tests.Pointers.MyCastEnum)}, typeof(Burst_Compiler_IL_Tests_Pointers_PointerCastEnumDelegate), CallBurst_Compiler_IL_Tests_Pointers_PointerCastEnumDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.Types.MyEnumByte),  new Type[] {typeof(Burst.Compiler.IL.Tests.Types.MyEnumByte).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Types_CheckEnumByteDelegate), CallBurst_Compiler_IL_Tests_Types_CheckEnumByteDelegate);
            Register(typeof(System.IntPtr),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_Pointers_IntPtrZeroDelegate), CallBurst_Compiler_IL_Tests_Pointers_IntPtrZeroDelegate);
            Register(typeof(System.IntPtr),  new Type[] {typeof(System.IntPtr), typeof(System.IntPtr), typeof(System.IntPtr)}, typeof(Burst_Compiler_IL_Tests_TestAtomics_CompareExchangeIntPtrDelegate), CallBurst_Compiler_IL_Tests_TestAtomics_CompareExchangeIntPtrDelegate);
            Register(typeof(System.IntPtr),  new Type[] {typeof(System.IntPtr)}, typeof(Burst_Compiler_IL_Tests_Pointers_IntPtrAddDelegate), CallBurst_Compiler_IL_Tests_Pointers_IntPtrAddDelegate);
            Register(typeof(System.IntPtr),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Pointers_IntPtrConstructorDelegate), CallBurst_Compiler_IL_Tests_Pointers_IntPtrConstructorDelegate);
            Register(typeof(System.UIntPtr),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_Pointers_UIntPtrZeroDelegate), CallBurst_Compiler_IL_Tests_Pointers_UIntPtrZeroDelegate);
            Register(typeof(System.UIntPtr),  new Type[] {typeof(System.UIntPtr)}, typeof(Burst_Compiler_IL_Tests_Pointers_UIntPtrAddDelegate), CallBurst_Compiler_IL_Tests_Pointers_UIntPtrAddDelegate);
            Register(typeof(System.UIntPtr),  new Type[] {typeof(uint)}, typeof(Burst_Compiler_IL_Tests_Pointers_UIntPtrConstructorDelegate), CallBurst_Compiler_IL_Tests_Pointers_UIntPtrConstructorDelegate);
            Register(typeof(bool),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_Expressions_ReturnBoolTrueDelegate), CallBurst_Compiler_IL_Tests_Expressions_ReturnBoolTrueDelegate);
            Register(typeof(bool),  new Type[] {typeof(Burst.Compiler.IL.Tests.Pointers.PointerConditional).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Pointers_TestConditionalPointerDelegate), CallBurst_Compiler_IL_Tests_Pointers_TestConditionalPointerDelegate);
            Register(typeof(bool),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestStructs.NetworkEndPoint), typeof(Burst.Compiler.IL.Tests.TestStructs.NetworkEndPoint)}, typeof(Burst_Compiler_IL_Tests_TestStructs_TestABITransformIntoExplicitLayoutTransformDelegate), CallBurst_Compiler_IL_Tests_TestStructs_TestABITransformIntoExplicitLayoutTransformDelegate);
            Register(typeof(bool),  new Type[] {typeof(System.IntPtr)}, typeof(Burst_Compiler_IL_Tests_Pointers_PointerCompareDelegate), CallBurst_Compiler_IL_Tests_Pointers_PointerCompareDelegate);
            Register(typeof(bool),  new Type[] {typeof(bool)}, typeof(Burst_Compiler_IL_Tests_Types_BoolArgAndReturnDelegate), CallBurst_Compiler_IL_Tests_Types_BoolArgAndReturnDelegate);
            Register(typeof(bool),  new Type[] {typeof(double)}, typeof(Burst_Compiler_IL_Tests_TestSystemMath_TestIsNanDoubleDelegate), CallBurst_Compiler_IL_Tests_TestSystemMath_TestIsNanDoubleDelegate);
            Register(typeof(bool),  new Type[] {typeof(float)}, typeof(Burst_Compiler_IL_Tests_TestSystemMath_TestIsNanFloatDelegate), CallBurst_Compiler_IL_Tests_TestSystemMath_TestIsNanFloatDelegate);
            Register(typeof(bool),  new Type[] {typeof(object)}, typeof(Burst_Compiler_IL_Tests_NotSupported_TestIsOfTypeDelegate), CallBurst_Compiler_IL_Tests_NotSupported_TestIsOfTypeDelegate);
            Register(typeof(byte),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfU1Delegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU1Delegate);
            Register(typeof(byte),  new Type[] {typeof(long)}, typeof(Burst_Compiler_IL_Tests_ControlFlows_SwitchOnLongDelegate), CallBurst_Compiler_IL_Tests_ControlFlows_SwitchOnLongDelegate);
            Register(typeof(double),  new Type[] {typeof(double), typeof(double)}, typeof(Burst_Compiler_IL_Tests_TestSystemMath_TestMaxDoubleDelegate), CallBurst_Compiler_IL_Tests_TestSystemMath_TestMaxDoubleDelegate);
            Register(typeof(double),  new Type[] {typeof(double)}, typeof(Burst_Compiler_IL_Tests_TestUnityMath_TestSignDoubleDelegate), CallBurst_Compiler_IL_Tests_TestUnityMath_TestSignDoubleDelegate);
            Register(typeof(double),  new Type[] {typeof(float), typeof(float)}, typeof(Burst_Compiler_IL_Tests_TestSystemMath_TestPowDelegate), CallBurst_Compiler_IL_Tests_TestSystemMath_TestPowDelegate);
            Register(typeof(double),  new Type[] {typeof(float)}, typeof(Burst_Compiler_IL_Tests_TestSystemMath_TestCosDelegate), CallBurst_Compiler_IL_Tests_TestSystemMath_TestCosDelegate);
            Register(typeof(float),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_Types_StructDelegate), CallBurst_Compiler_IL_Tests_Types_StructDelegate);
            Register(typeof(float),  new Type[] {typeof(float), typeof(float)}, typeof(Burst_Compiler_IL_Tests_Expressions_test_expr_add_two_argumentsDelegate), CallBurst_Compiler_IL_Tests_Expressions_test_expr_add_two_argumentsDelegate);
            Register(typeof(float),  new Type[] {typeof(float)}, typeof(Burst_Compiler_IL_Tests_Expressions_test_expr_add_multiplesDelegate), CallBurst_Compiler_IL_Tests_Expressions_test_expr_add_multiplesDelegate);
            Register(typeof(float),  new Type[] {typeof(int), typeof(int)}, typeof(Burst_Compiler_IL_Tests_ControlFlows_ForWhileNestedCallDelegate), CallBurst_Compiler_IL_Tests_ControlFlows_ForWhileNestedCallDelegate);
            Register(typeof(float),  new Type[] {typeof(int).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_ControlFlows_ForDynamicConditionDelegate), CallBurst_Compiler_IL_Tests_ControlFlows_ForDynamicConditionDelegate);
            Register(typeof(float),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertIntToFloatDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertIntToFloatDelegate);
            Register(typeof(int),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_Types_SizeOfBoolStructDelegate), CallBurst_Compiler_IL_Tests_Types_SizeOfBoolStructDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.ControlFlows.EnumSwitch)}, typeof(Burst_Compiler_IL_Tests_ControlFlows_SwitchEnumDelegate), CallBurst_Compiler_IL_Tests_ControlFlows_SwitchEnumDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.NotSupported.CharbyValueFunc).MakeByRefType(), typeof(int)}, typeof(Burst_Compiler_IL_Tests_NotSupported_TestCharbyValueDelegate), CallBurst_Compiler_IL_Tests_NotSupported_TestCharbyValueDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.Pointers.MyStructWithFixed).MakeByRefType(), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Pointers_FixedFieldViaPointerDelegate), CallBurst_Compiler_IL_Tests_Pointers_FixedFieldViaPointerDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.Pointers.MyStructWithFixed).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Pointers_FixedInt32AndRefInt32Delegate), CallBurst_Compiler_IL_Tests_Pointers_FixedInt32AndRefInt32Delegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestEnums.MyEnum)}, typeof(Burst_Compiler_IL_Tests_TestEnums_test_enum_compareDelegate), CallBurst_Compiler_IL_Tests_TestEnums_test_enum_compareDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestEnums.SmallEnum)}, typeof(Burst_Compiler_IL_Tests_TestEnums_test_enum_sizeof_small_enum_in_struct_accessDelegate), CallBurst_Compiler_IL_Tests_TestEnums_test_enum_sizeof_small_enum_in_struct_accessDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestStructs.ExplicitLayoutStructFixedBuffer).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestStructs_TestExplicitLayoutStructFixedBufferDelegate), CallBurst_Compiler_IL_Tests_TestStructs_TestExplicitLayoutStructFixedBufferDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestStructs.SequentialStructWithPaddingAndVectorField).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestStructs_TestSequentialStructWithPaddingAndVectorFieldDelegate), CallBurst_Compiler_IL_Tests_TestStructs_TestSequentialStructWithPaddingAndVectorFieldDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.Types.MyEnum)}, typeof(Burst_Compiler_IL_Tests_Types_EnumByParamDelegate), CallBurst_Compiler_IL_Tests_Types_EnumByParamDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestStructs_TestVectorStoreToExplicitStructDelegate), CallBurst_Compiler_IL_Tests_TestStructs_TestVectorStoreToExplicitStructDelegate);
            Register(typeof(int),  new Type[] {typeof(bool)}, typeof(Burst_Compiler_IL_Tests_Expressions_BrtrueDelegate), CallBurst_Compiler_IL_Tests_Expressions_BrtrueDelegate);
            Register(typeof(int),  new Type[] {typeof(byte)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertbyteToIntDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertbyteToIntDelegate);
            Register(typeof(int),  new Type[] {typeof(double)}, typeof(Burst_Compiler_IL_Tests_TestSystemMath_TestSignDoubleDelegate), CallBurst_Compiler_IL_Tests_TestSystemMath_TestSignDoubleDelegate);
            Register(typeof(int),  new Type[] {typeof(float)}, typeof(Burst_Compiler_IL_Tests_Expressions_test_expr_cast_float_to_intDelegate), CallBurst_Compiler_IL_Tests_Expressions_test_expr_cast_float_to_intDelegate);
            Register(typeof(int),  new Type[] {typeof(int), typeof(int), typeof(int)}, typeof(Burst_Compiler_IL_Tests_ControlFlows_IfDeepDelegate), CallBurst_Compiler_IL_Tests_ControlFlows_IfDeepDelegate);
            Register(typeof(int),  new Type[] {typeof(int), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_BinaryNumericAddDelegate), CallBurst_Compiler_IL_Tests_Expressions_BinaryNumericAddDelegate);
            Register(typeof(int),  new Type[] {typeof(int).MakeByRefType(), typeof(int), typeof(int)}, typeof(Burst_Compiler_IL_Tests_TestAtomics_test_atomic_compare_and_exchange_intDelegate), CallBurst_Compiler_IL_Tests_TestAtomics_test_atomic_compare_and_exchange_intDelegate);
            Register(typeof(int),  new Type[] {typeof(int).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_ControlFlows_WhileDynamicDelegate), CallBurst_Compiler_IL_Tests_ControlFlows_WhileDynamicDelegate);
            Register(typeof(int),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_BltDelegate), CallBurst_Compiler_IL_Tests_Expressions_BltDelegate);
            Register(typeof(int),  new Type[] {typeof(int*), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Pointers_UnsafeCompareDelegate), CallBurst_Compiler_IL_Tests_Pointers_UnsafeCompareDelegate);
            Register(typeof(long),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_Types_StructAccessDelegate), CallBurst_Compiler_IL_Tests_Types_StructAccessDelegate);
            Register(typeof(long),  new Type[] {typeof(int), typeof(int)}, typeof(Burst_Compiler_IL_Tests_TestSystemMath_TestBigMulIntDelegate), CallBurst_Compiler_IL_Tests_TestSystemMath_TestBigMulIntDelegate);
            Register(typeof(long),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertIntToLongDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertIntToLongDelegate);
            Register(typeof(long),  new Type[] {typeof(long).MakeByRefType(), typeof(long), typeof(long)}, typeof(Burst_Compiler_IL_Tests_TestAtomics_test_atomic_compare_and_exchange_longDelegate), CallBurst_Compiler_IL_Tests_TestAtomics_test_atomic_compare_and_exchange_longDelegate);
            Register(typeof(long),  new Type[] {typeof(long).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAtomics_test_atomic_increment_longDelegate), CallBurst_Compiler_IL_Tests_TestAtomics_test_atomic_increment_longDelegate);
            Register(typeof(long),  new Type[] {typeof(long)}, typeof(Burst_Compiler_IL_Tests_TestSystemMath_TestAbsLongDelegate), CallBurst_Compiler_IL_Tests_TestSystemMath_TestAbsLongDelegate);
            Register(typeof(sbyte),  new Type[] {typeof(sbyte)}, typeof(Burst_Compiler_IL_Tests_TestSystemMath_TestAbsSByteDelegate), CallBurst_Compiler_IL_Tests_TestSystemMath_TestAbsSByteDelegate);
            Register(typeof(short),  new Type[] {typeof(short)}, typeof(Burst_Compiler_IL_Tests_TestSystemMath_TestAbsShortDelegate), CallBurst_Compiler_IL_Tests_TestSystemMath_TestAbsShortDelegate);
            Register(typeof(uint),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_Expressions_ConvertUShortToUIntConstMaxDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertUShortToUIntConstMaxDelegate);
            Register(typeof(ulong),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_Expressions_ConvertIntToLongConstDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertIntToLongConstDelegate);
            Register(typeof(void),  Array.Empty<Type>(), typeof(Unity_Mathematics_Tests_TestBitmanipulation_bitmask_bool4Delegate), CallUnity_Mathematics_Tests_TestBitmanipulation_bitmask_bool4Delegate);
            Register(typeof(void),  new Type[] {typeof(bool)}, typeof(Burst_Compiler_IL_Tests_NotSupported_TestMethodWithMarshalAsParameterDelegate), CallBurst_Compiler_IL_Tests_NotSupported_TestMethodWithMarshalAsParameterDelegate);
            Register(typeof(void),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Pointers_TestCellVisibleInternalDelegate), CallBurst_Compiler_IL_Tests_Pointers_TestCellVisibleInternalDelegate);

#if BURST_TESTS_ONLY
            Register(typeof(Burst.Compiler.IL.Tests.ABI.BigExplicitLayoutStruct),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.BigExplicitLayoutStruct), typeof(int)}, typeof(Burst_Compiler_IL_Tests_ABI_EntryBigExplicitLayoutStructDelegate), CallBurst_Compiler_IL_Tests_ABI_EntryBigExplicitLayoutStructDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.BigSSEStruct),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.BigSSEStruct)}, typeof(Burst_Compiler_IL_Tests_ABI_EntryBigSSEStructDelegate), CallBurst_Compiler_IL_Tests_ABI_EntryBigSSEStructDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.BigStruct),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_ABI_EntryPointReturnBigStructDelegate), CallBurst_Compiler_IL_Tests_ABI_EntryPointReturnBigStructDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.EmptyStruct),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.EmptyStruct)}, typeof(Burst_Compiler_IL_Tests_ABI_TestEmptyStructDelegate), CallBurst_Compiler_IL_Tests_ABI_TestEmptyStructDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.ExplicitButAligned),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.ExplicitButAligned)}, typeof(Burst_Compiler_IL_Tests_ABI_EntryExplicitButAlignedDelegate), CallBurst_Compiler_IL_Tests_ABI_EntryExplicitButAlignedDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.IIF),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.IIF)}, typeof(Burst_Compiler_IL_Tests_ABI_TestIIFDelegate), CallBurst_Compiler_IL_Tests_ABI_TestIIFDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.KindaBig),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.KindaBig)}, typeof(Burst_Compiler_IL_Tests_ABI_TestKindaBigDelegate), CallBurst_Compiler_IL_Tests_ABI_TestKindaBigDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.OverlappingFieldsStruct),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.OverlappingFieldsStruct)}, typeof(Burst_Compiler_IL_Tests_ABI_EntryOverlappingFieldsStructDelegate), CallBurst_Compiler_IL_Tests_ABI_EntryOverlappingFieldsStructDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.SizePaddedBig),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.SizePaddedBig), typeof(Burst.Compiler.IL.Tests.ABI.SizePaddedBig)}, typeof(Burst_Compiler_IL_Tests_ABI_EntrySizeSizePaddedBigDelegate), CallBurst_Compiler_IL_Tests_ABI_EntrySizeSizePaddedBigDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.SizePaddedSmall),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.SizePaddedSmall), typeof(Burst.Compiler.IL.Tests.ABI.SizePaddedSmall)}, typeof(Burst_Compiler_IL_Tests_ABI_EntrySizePaddedSmallDelegate), CallBurst_Compiler_IL_Tests_ABI_EntrySizePaddedSmallDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.SmallSseUpStruct),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.SmallSseUpStruct)}, typeof(Burst_Compiler_IL_Tests_ABI_EntrySmallSseUpStructDelegate), CallBurst_Compiler_IL_Tests_ABI_EntrySmallSseUpStructDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.SmallStruct),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_ABI_EntryPointReturnSmallStructDelegate), CallBurst_Compiler_IL_Tests_ABI_EntryPointReturnSmallStructDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.UnalignedSmallStruct),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_ABI_EntryPointReturnUnalignedSmallStructDelegate), CallBurst_Compiler_IL_Tests_ABI_EntryPointReturnUnalignedSmallStructDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.UnalignedSmallStruct),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.UnalignedSmallStruct)}, typeof(Burst_Compiler_IL_Tests_ABI_EntryPointWithUnalignedSmallStructDelegate), CallBurst_Compiler_IL_Tests_ABI_EntryPointWithUnalignedSmallStructDelegate);
            Register(typeof(Burst.Compiler.IL.Tests.ABI.UnalignedSmallStructWithPadding),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_ABI_EntryPointReturnUnalignedSmallStructWithPaddingDelegate), CallBurst_Compiler_IL_Tests_ABI_EntryPointReturnUnalignedSmallStructWithPaddingDelegate);
            Register(typeof(bool),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestStructs.SomeStruct).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestStructs_TestCharEqualDelegate), CallBurst_Compiler_IL_Tests_TestStructs_TestCharEqualDelegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.bool2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_AnyBool2Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyBool2Delegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.bool3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_AnyBool3Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyBool3Delegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.bool4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_AnyBool4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyBool4Delegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.float2).MakeByRefType(), typeof(Unity.Mathematics.float2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Float2EqualsDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Float2EqualsDelegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.float2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_AnyDelegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyDelegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.float3).MakeByRefType(), typeof(Unity.Mathematics.float3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Float3EqualsDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Float3EqualsDelegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.float3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_Any32Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_Any32Delegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.float4).MakeByRefType(), typeof(Unity.Mathematics.float4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Float4EqualsDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Float4EqualsDelegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.float4).MakeByRefType(), typeof(float)}, typeof(Burst_Compiler_IL_Tests_Vectors_BinaryOperators_Float4_GreaterThanFloat4FloatUnsafeDelegate), CallBurst_Compiler_IL_Tests_Vectors_BinaryOperators_Float4_GreaterThanFloat4FloatUnsafeDelegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.float4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_Any4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_Any4Delegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.int2).MakeByRefType(), typeof(Unity.Mathematics.int2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Int2EqualsDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Int2EqualsDelegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.int2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_AnyInt2Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyInt2Delegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.int3).MakeByRefType(), typeof(Unity.Mathematics.int3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Int3EqualsDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Int3EqualsDelegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.int3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_AnyInt3Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyInt3Delegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.int4).MakeByRefType(), typeof(Unity.Mathematics.int4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Int4EqualsDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Int4EqualsDelegate);
            Register(typeof(bool),  new Type[] {typeof(Unity.Mathematics.int4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_AnyInt4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyInt4Delegate);
            Register(typeof(bool),  new Type[] {typeof(UnityBenchShared.SphereCullingAOSJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingAOSDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestSphereCullingAOSDelegate);
            Register(typeof(bool),  new Type[] {typeof(UnityBenchShared.SphereCullingChunkFixedSOAJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingChunkFixedSOADelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestSphereCullingChunkFixedSOADelegate);
            Register(typeof(bool),  new Type[] {typeof(UnityBenchShared.SphereCullingChunkSOAJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingChunkSOADelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestSphereCullingChunkSOADelegate);
            Register(typeof(bool),  new Type[] {typeof(UnityBenchShared.SphereCullingFloat4AOSJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingFloat4AOSDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestSphereCullingFloat4AOSDelegate);
            Register(typeof(bool),  new Type[] {typeof(UnityBenchShared.SphereCullingSOAJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingSOADelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestSphereCullingSOADelegate);
            Register(typeof(bool),  new Type[] {typeof(bool), typeof(bool)}, typeof(Burst_Compiler_IL_Tests_Expressions_CompareEqualBoolDelegate), CallBurst_Compiler_IL_Tests_Expressions_CompareEqualBoolDelegate);
            Register(typeof(bool),  new Type[] {typeof(bool), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_BoolOrFunctionDelegate), CallBurst_Compiler_IL_Tests_Expressions_BoolOrFunctionDelegate);
            Register(typeof(bool),  new Type[] {typeof(int), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_CompareEqualInt32Delegate), CallBurst_Compiler_IL_Tests_Expressions_CompareEqualInt32Delegate);
            Register(typeof(bool),  new Type[] {typeof(int), typeof(uint)}, typeof(Burst_Compiler_IL_Tests_Expressions_CompareLessThanInt32UInt32Delegate), CallBurst_Compiler_IL_Tests_Expressions_CompareLessThanInt32UInt32Delegate);
            Register(typeof(bool),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_CompareEqualInt32WithConstDelegate), CallBurst_Compiler_IL_Tests_Expressions_CompareEqualInt32WithConstDelegate);
            Register(typeof(bool),  new Type[] {typeof(long), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_CompareLessThanInt64Int32Delegate), CallBurst_Compiler_IL_Tests_Expressions_CompareLessThanInt64Int32Delegate);
            Register(typeof(bool),  new Type[] {typeof(uint), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_CompareLessThanUInt32Int32Delegate), CallBurst_Compiler_IL_Tests_Expressions_CompareLessThanUInt32Int32Delegate);
            Register(typeof(byte),  new Type[] {typeof(uint)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfU1UnDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU1UnDelegate);
            Register(typeof(char),  Array.Empty<Type>(), typeof(Burst_Compiler_IL_Tests_TestStructs_TestCharReturnDelegate), CallBurst_Compiler_IL_Tests_TestStructs_TestCharReturnDelegate);
            Register(typeof(double),  new Type[] {typeof(Unity.Mathematics.double2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_AbsDouble2Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_AbsDouble2Delegate);
            Register(typeof(double),  new Type[] {typeof(Unity.Mathematics.double3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_AbsDouble3Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_AbsDouble3Delegate);
            Register(typeof(double),  new Type[] {typeof(Unity.Mathematics.double4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_Cos4dDelegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_Cos4dDelegate);
            Register(typeof(double),  new Type[] {typeof(Unity.Mathematics.int4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Doubles_Double4Int4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Doubles_Double4Int4Delegate);
            Register(typeof(double),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Vectors_Doubles_Double4IntDelegate), CallBurst_Compiler_IL_Tests_Vectors_Doubles_Double4IntDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.ChunkedTestDataWrapper).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetElem_3aDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetElem_3aDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.Expressions.SByteEnum)}, typeof(Burst_Compiler_IL_Tests_Expressions_TestSByteEnumDelegate), CallBurst_Compiler_IL_Tests_Expressions_TestSByteEnumDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.Expressions.UnsignedEnum)}, typeof(Burst_Compiler_IL_Tests_Expressions_TestUnsignedEnumDelegate), CallBurst_Compiler_IL_Tests_Expressions_TestUnsignedEnumDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.FullSOATestDataWrapper).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetElem_3aDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetElem_3aDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.Climate).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_native_array_with_accessor_path_from_ldfdDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_native_array_with_accessor_path_from_ldfdDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayCustomItem).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestNativeArraySortCustomItemDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestNativeArraySortCustomItemDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayFloat).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestGetUnsafeReadOnlyPtrDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestGetUnsafeReadOnlyPtrDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayFloat4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_expr_native_array_unsafe_ptr_cast_float4_to_floatDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_expr_native_array_unsafe_ptr_cast_float4_to_floatDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeQueues.JobData).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeQueues_QueueOverflowDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeQueues_QueueOverflowDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeSlices.NativeSliceFloat).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeSlices_TestGetUnsafeReadOnlyPtrDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeSlices_TestGetUnsafeReadOnlyPtrDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeSlices.NativeSliceFloat4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeSlices_test_expr_native_slice_unsafe_ptr_cast_float4_to_floatDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeSlices_test_expr_native_slice_unsafe_ptr_cast_float4_to_floatDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestAlias.BigStructNativeArrayJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestNoAliasOnNativeArraysWithBigStructsDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestNoAliasOnNativeArraysWithBigStructsDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestAlias.InPlaceFloat3Job).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestInPlaceFloat3JobDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestInPlaceFloat3JobDelegate);
            Register(typeof(float),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestAlias.InPlaceFloat4Job).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestInPlaceFloat4JobDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestInPlaceFloat4JobDelegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.bool2).MakeByRefType(), typeof(Unity.Mathematics.float2).MakeByRefType(), typeof(Unity.Mathematics.float2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_SelectDelegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_SelectDelegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.bool3).MakeByRefType(), typeof(Unity.Mathematics.float3).MakeByRefType(), typeof(Unity.Mathematics.float3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_Select3Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_Select3Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.bool4).MakeByRefType(), typeof(Unity.Mathematics.float4).MakeByRefType(), typeof(Unity.Mathematics.float4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_Select4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_Select4Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.float2).MakeByRefType(), typeof(Unity.Mathematics.float2).MakeByRefType(), typeof(Unity.Mathematics.float2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_Lerp2_2Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_Lerp2_2Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.float2).MakeByRefType(), typeof(Unity.Mathematics.float2).MakeByRefType(), typeof(float)}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_Smoothstep2Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_Smoothstep2Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.float2).MakeByRefType(), typeof(Unity.Mathematics.float2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_ATan2_2Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_ATan2_2Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.float2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_Cos2Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_Cos2Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.float3).MakeByRefType(), typeof(Unity.Mathematics.float3).MakeByRefType(), typeof(Unity.Mathematics.float3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_Lerp3_3Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_Lerp3_3Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.float3).MakeByRefType(), typeof(Unity.Mathematics.float3).MakeByRefType(), typeof(float)}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_Smoothstep3Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_Smoothstep3Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.float3).MakeByRefType(), typeof(Unity.Mathematics.float3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_ATan2_3Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_ATan2_3Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.float3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Indexers_Float3_get_IndexerByRefDelegate), CallBurst_Compiler_IL_Tests_Vectors_Indexers_Float3_get_IndexerByRefDelegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.float4).MakeByRefType(), typeof(Unity.Mathematics.float4).MakeByRefType(), typeof(Unity.Mathematics.float4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_Lerp4_4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_Lerp4_4Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.float4).MakeByRefType(), typeof(Unity.Mathematics.float4).MakeByRefType(), typeof(float)}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_Smoothstep4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_Smoothstep4Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.float4).MakeByRefType(), typeof(Unity.Mathematics.float4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_ATan2_4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_ATan2_4Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.float4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Deterministic_CosFloat4Delegate), CallBurst_Compiler_IL_Tests_Deterministic_CosFloat4Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.int2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_AsFloatInt2Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_AsFloatInt2Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.int3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_AsFloatInt3Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_AsFloatInt3Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.int4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Constructors_Float4Int4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Constructors_Float4Int4Delegate);
            Register(typeof(float),  new Type[] {typeof(Unity.Mathematics.uint4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_AsFloatUInt4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_AsFloatUInt4Delegate);
            Register(typeof(float),  new Type[] {typeof(UnityBenchShared.SumNumbersTest).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestSumNumbers_SumNunbersDelegate), CallBurst_Compiler_IL_Tests_TestSumNumbers_SumNunbersDelegate);
            Register(typeof(float),  new Type[] {typeof(UnityEngine.Boids.BoidsJob).MakeByRefType(), typeof(int)}, typeof(Burst_Compiler_IL_Tests_TestBoids_test_boids_jobDelegate), CallBurst_Compiler_IL_Tests_TestBoids_test_boids_jobDelegate);
            Register(typeof(float),  new Type[] {typeof(float), typeof(float), typeof(float)}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_SmoothstepDelegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_SmoothstepDelegate);
            Register(typeof(float),  new Type[] {typeof(uint)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertUIntToFloatDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertUIntToFloatDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.BigStruct)}, typeof(Burst_Compiler_IL_Tests_ABI_EntryPointWithBigStructDelegate), CallBurst_Compiler_IL_Tests_ABI_EntryPointWithBigStructDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.SmallStruct)}, typeof(Burst_Compiler_IL_Tests_ABI_EntryPointWithSmallStructDelegate), CallBurst_Compiler_IL_Tests_ABI_EntryPointWithSmallStructDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.ChunkedTestDataWrapper).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetLengthDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetLengthDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.FullSOATestDataWrapper).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetLengthDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetLengthDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayBool).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestArrayBoolAccessReadDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestArrayBoolAccessReadDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayIntCopy).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_expr_native_array_int_copy_arrayDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_expr_native_array_int_copy_arrayDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeMultiHashMaps.JobData).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeMultiHashMaps_TestReadWriteDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeMultiHashMaps_TestReadWriteDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeSlices.NativeSliceIntCopy).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeSlices_test_expr_native_slice_int_copy_sliceDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeSlices_test_expr_native_slice_int_copy_sliceDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestCullingJob.CullingJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestCullingJob_test_culling_job_simpleDelegate), CallBurst_Compiler_IL_Tests_TestCullingJob_test_culling_job_simpleDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestFunctionPointers.FPBigStructFunc), typeof(Burst.Compiler.IL.Tests.ABI.BigStruct)}, typeof(Burst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerWithBigStructDelegate), CallBurst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerWithBigStructDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestFunctionPointers.FPInIntFunc).MakeByRefType(), typeof(int), typeof(int)}, typeof(Burst_Compiler_IL_Tests_TestFunctionPointers_TestAddTwoNumbersByInDelegate), CallBurst_Compiler_IL_Tests_TestFunctionPointers_TestAddTwoNumbersByInDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestFunctionPointers.FPIntFunc).MakeByRefType(), typeof(Burst.Compiler.IL.Tests.TestFunctionPointers.FPIntFunc).MakeByRefType(), typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayFloat).MakeByRefType(), typeof(int)}, typeof(Burst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerDynamicInvokeDelegate), CallBurst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerDynamicInvokeDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestFunctionPointers.FPIntFunc).MakeByRefType(), typeof(Burst.Compiler.IL.Tests.TestFunctionPointers.FPIntFunc).MakeByRefType(), typeof(int)}, typeof(Burst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerInvokeDelegate), CallBurst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerInvokeDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestFunctionPointers.ReturnRefReadOnlyFunc).MakeByRefType(), typeof(int), typeof(int)}, typeof(Burst_Compiler_IL_Tests_TestFunctionPointers_TestReturnRefReadOnlyDelegate), CallBurst_Compiler_IL_Tests_TestFunctionPointers_TestReturnRefReadOnlyDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestFunctionPointers.StructsInFunc).MakeByRefType(), typeof(int), typeof(int)}, typeof(Burst_Compiler_IL_Tests_TestFunctionPointers_TestAddTwoStructsByInDelegate), CallBurst_Compiler_IL_Tests_TestFunctionPointers_TestAddTwoStructsByInDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestGenerics.TestJob).MakeByRefType(), typeof(int)}, typeof(Burst_Compiler_IL_Tests_TestGenerics_ExecuteAudioBugDelegate), CallBurst_Compiler_IL_Tests_TestGenerics_ExecuteAudioBugDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestStructs.ParentStruct).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestStructs_TestNestedStructCharDelegate), CallBurst_Compiler_IL_Tests_TestStructs_TestNestedStructCharDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestStructs.SomeStruct).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestStructs_TestStructCharDelegate), CallBurst_Compiler_IL_Tests_TestStructs_TestStructCharDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestStructs.StaticCharStruct).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestStructs_TestStaticReadonlyCharInStructLhsDelegate), CallBurst_Compiler_IL_Tests_TestStructs_TestStaticReadonlyCharInStructLhsDelegate);
            Register(typeof(int),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestUnsafeUtilityEx.NativeArrayInt).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestUnsafeUtilityEx_TestMemSet0Delegate), CallBurst_Compiler_IL_Tests_TestUnsafeUtilityEx_TestMemSet0Delegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.bool2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Bools_Bool2NotDelegate), CallBurst_Compiler_IL_Tests_Vectors_Bools_Bool2NotDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.bool3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Bools_Bool3NotDelegate), CallBurst_Compiler_IL_Tests_Vectors_Bools_Bool3NotDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.bool4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Masks_TestSimpleMaskBool4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Masks_TestSimpleMaskBool4Delegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.float2).MakeByRefType(), typeof(Unity.Mathematics.float2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Float2EqualityDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Float2EqualityDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.float2).MakeByRefType(), typeof(float)}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Float2EqualityWithFloatDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Float2EqualityWithFloatDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.float2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_HashCodes_Float2GetHashCodeDelegate), CallBurst_Compiler_IL_Tests_Vectors_HashCodes_Float2GetHashCodeDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.float3).MakeByRefType(), typeof(Unity.Mathematics.float3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Float3EqualityDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Float3EqualityDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.float3).MakeByRefType(), typeof(float)}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Float3EqualityWithFloatDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Float3EqualityWithFloatDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.float3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_RegressionsInBurstV1_TestRegressionIssue133Delegate), CallBurst_Compiler_IL_Tests_RegressionsInBurstV1_TestRegressionIssue133Delegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.float4).MakeByRefType(), typeof(Unity.Mathematics.float4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Masks_TestSimpleMaskFloat4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Masks_TestSimpleMaskFloat4Delegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.float4).MakeByRefType(), typeof(float)}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Float4EqualityWithFloatDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Float4EqualityWithFloatDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.float4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_HashCodes_Float4GetHashCodeDelegate), CallBurst_Compiler_IL_Tests_Vectors_HashCodes_Float4GetHashCodeDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int2).MakeByRefType(), typeof(Unity.Mathematics.int2).MakeByRefType(), typeof(Unity.Mathematics.int2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_ClampInt2Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_ClampInt2Delegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int2).MakeByRefType(), typeof(Unity.Mathematics.int2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Int2EqualityDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Int2EqualityDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int2).MakeByRefType(), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Int2EqualityWithIntDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Int2EqualityWithIntDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int3).MakeByRefType(), typeof(Unity.Mathematics.int3).MakeByRefType(), typeof(Unity.Mathematics.int3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_ClampInt3Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_ClampInt3Delegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int3).MakeByRefType(), typeof(Unity.Mathematics.int3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Int3EqualityDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Int3EqualityDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int3).MakeByRefType(), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Int3EqualityWithIntDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Int3EqualityWithIntDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_HashCodes_Int3GetHashCodeDelegate), CallBurst_Compiler_IL_Tests_Vectors_HashCodes_Int3GetHashCodeDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int4).MakeByRefType(), typeof(Unity.Mathematics.bool4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_CompressInt4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_CompressInt4Delegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int4).MakeByRefType(), typeof(Unity.Mathematics.int4).MakeByRefType(), typeof(Unity.Mathematics.int4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_ClampInt4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_ClampInt4Delegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int4).MakeByRefType(), typeof(Unity.Mathematics.int4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Int4EqualityDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Int4EqualityDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int4).MakeByRefType(), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Vectors_Equality_Int4EqualityWithIntDelegate), CallBurst_Compiler_IL_Tests_Vectors_Equality_Int4EqualityWithIntDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.int4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_HashCodes_Int4GetHashCodeDelegate), CallBurst_Compiler_IL_Tests_Vectors_HashCodes_Int4GetHashCodeDelegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.uint2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt2Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt2Delegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.uint3).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt3Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt3Delegate);
            Register(typeof(int),  new Type[] {typeof(Unity.Mathematics.uint4).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt4Delegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt4Delegate);
            Register(typeof(int),  new Type[] {typeof(bool), typeof(bool), typeof(bool), typeof(bool)}, typeof(Burst_Compiler_IL_Tests_Vectors_Constructors_Bool44BoolsDelegate), CallBurst_Compiler_IL_Tests_Vectors_Constructors_Bool44BoolsDelegate);
            Register(typeof(int),  new Type[] {typeof(bool), typeof(bool), typeof(bool)}, typeof(Burst_Compiler_IL_Tests_Vectors_Constructors_Bool33BoolsDelegate), CallBurst_Compiler_IL_Tests_Vectors_Constructors_Bool33BoolsDelegate);
            Register(typeof(int),  new Type[] {typeof(bool), typeof(bool)}, typeof(Burst_Compiler_IL_Tests_Vectors_Constructors_Bool22IntsDelegate), CallBurst_Compiler_IL_Tests_Vectors_Constructors_Bool22IntsDelegate);
            Register(typeof(int),  new Type[] {typeof(byte), typeof(float)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertByteToFloatToByteDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertByteToFloatToByteDelegate);
            Register(typeof(int),  new Type[] {typeof(char).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestStructs_TestCharByRefDelegate), CallBurst_Compiler_IL_Tests_TestStructs_TestCharByRefDelegate);
            Register(typeof(int),  new Type[] {typeof(char)}, typeof(Burst_Compiler_IL_Tests_TestStructs_TestCharByValDelegate), CallBurst_Compiler_IL_Tests_TestStructs_TestCharByValDelegate);
            Register(typeof(int),  new Type[] {typeof(float), typeof(float)}, typeof(Burst_Compiler_IL_Tests_Vectors_BinaryOperators_Float2_EqualityDelegate), CallBurst_Compiler_IL_Tests_Vectors_BinaryOperators_Float2_EqualityDelegate);
            Register(typeof(int),  new Type[] {typeof(int), typeof(int), typeof(int), typeof(int), typeof(int), typeof(int), typeof(Burst.Compiler.IL.Tests.ABI.SmallStruct)}, typeof(Burst_Compiler_IL_Tests_ABI_EntryNoRegistersForStructDelegate), CallBurst_Compiler_IL_Tests_ABI_EntryNoRegistersForStructDelegate);
            Register(typeof(int),  new Type[] {typeof(int).MakeByRefType(), typeof(int).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_ByRef_ByRefChangeDelegate), CallBurst_Compiler_IL_Tests_ByRef_ByRefChangeDelegate);
            Register(typeof(int),  new Type[] {typeof(long)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfI4Delegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfI4Delegate);
            Register(typeof(int),  new Type[] {typeof(short)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertShortToIntDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertShortToIntDelegate);
            Register(typeof(int),  new Type[] {typeof(uint), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_BinaryNumericShiftRightUIntToInt32Delegate), CallBurst_Compiler_IL_Tests_Expressions_BinaryNumericShiftRightUIntToInt32Delegate);
            Register(typeof(int),  new Type[] {typeof(uint)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfI4UnDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfI4UnDelegate);
            Register(typeof(int),  new Type[] {typeof(ulong)}, typeof(Burst_Compiler_IL_Tests_Vectors_Maths_CountBitsULongDelegate), CallBurst_Compiler_IL_Tests_Vectors_Maths_CountBitsULongDelegate);
            Register(typeof(long),  new Type[] {typeof(byte)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertbyteToLongDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertbyteToLongDelegate);
            Register(typeof(long),  new Type[] {typeof(double)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfI8Delegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfI8Delegate);
            Register(typeof(long),  new Type[] {typeof(long), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_BinaryNumericDiv64Delegate), CallBurst_Compiler_IL_Tests_Expressions_BinaryNumericDiv64Delegate);
            Register(typeof(long),  new Type[] {typeof(sbyte)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertSbyteToLongDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertSbyteToLongDelegate);
            Register(typeof(long),  new Type[] {typeof(short)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertShortToLongDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertShortToLongDelegate);
            Register(typeof(long),  new Type[] {typeof(uint)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertUIntToLongDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertUIntToLongDelegate);
            Register(typeof(long),  new Type[] {typeof(ulong)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfI8UnDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfI8UnDelegate);
            Register(typeof(sbyte),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvI1Delegate), CallBurst_Compiler_IL_Tests_Expressions_ConvI1Delegate);
            Register(typeof(sbyte),  new Type[] {typeof(uint)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfI1UnDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfI1UnDelegate);
            Register(typeof(short),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvI2Delegate), CallBurst_Compiler_IL_Tests_Expressions_ConvI2Delegate);
            Register(typeof(short),  new Type[] {typeof(uint)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfI2UnDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfI2UnDelegate);
            Register(typeof(uint),  new Type[] {typeof(Burst.Compiler.IL.Tests.ChunkedTestDataWrapper).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetElem_3cDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetElem_3cDelegate);
            Register(typeof(uint),  new Type[] {typeof(Burst.Compiler.IL.Tests.FullSOATestDataWrapper).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetElem_3cDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetElem_3cDelegate);
            Register(typeof(uint),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfU4Delegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU4Delegate);
            Register(typeof(uint),  new Type[] {typeof(sbyte)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertSbyteToUIntDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertSbyteToUIntDelegate);
            Register(typeof(uint),  new Type[] {typeof(uint), typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_BinaryNumericShiftLeftUInt32Delegate), CallBurst_Compiler_IL_Tests_Expressions_BinaryNumericShiftLeftUInt32Delegate);
            Register(typeof(uint),  new Type[] {typeof(uint)}, typeof(Burst_Compiler_IL_Tests_Expressions_BgtUnDelegate), CallBurst_Compiler_IL_Tests_Expressions_BgtUnDelegate);
            Register(typeof(uint),  new Type[] {typeof(ulong)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfU4UnDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU4UnDelegate);
            Register(typeof(ulong),  new Type[] {typeof(double)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfU8Delegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU8Delegate);
            Register(typeof(ulong),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertIntToULongDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertIntToULongDelegate);
            Register(typeof(ulong),  new Type[] {typeof(short)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertShortToULongDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertShortToULongDelegate);
            Register(typeof(ulong),  new Type[] {typeof(uint)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvertUIntToULongDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvertUIntToULongDelegate);
            Register(typeof(ushort),  new Type[] {typeof(int)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfU2Delegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU2Delegate);
            Register(typeof(ushort),  new Type[] {typeof(uint)}, typeof(Burst_Compiler_IL_Tests_Expressions_ConvOvfU2UnDelegate), CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU2UnDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.ABI.CullChunksWrapper).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_ABI_TestABIRegressionDelegate), CallBurst_Compiler_IL_Tests_ABI_TestABIRegressionDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.Case1061135.NewMoveJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_Case1061135_TestNewMoveDiscardDelegate), CallBurst_Compiler_IL_Tests_Case1061135_TestNewMoveDiscardDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.ChunkedTestDataWrapper).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestSetElemDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestSetElemDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.FullSOATestDataWrapper).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestSetElemDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestSetElemDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeHashMaps.HashMapJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeHashMaps_TestIssueWithHashMapDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeHashMaps_TestIssueWithHashMapDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.NativeContainers.NativeMultiHashMaps.HashMapAndQueueJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_NativeContainers_NativeMultiHashMaps_TestIssueHashMapAndQueueDelegate), CallBurst_Compiler_IL_Tests_NativeContainers_NativeMultiHashMaps_TestIssueHashMapAndQueueDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.RegressionsInBurstV1.StructBVHTest).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_RegressionsInBurstV1_TestBVHDelegate), CallBurst_Compiler_IL_Tests_RegressionsInBurstV1_TestBVHDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.RegressionsInBurstV1.StructInitJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_RegressionsInBurstV1_TestStructInitDelegate), CallBurst_Compiler_IL_Tests_RegressionsInBurstV1_TestStructInitDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestAlias.CopyJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestCopyJobDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestCopyJobDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestAlias.CopyWithExplicitNoAlias).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestCopyWithExplicitNoAliasDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestCopyWithExplicitNoAliasDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestAlias.DivisionByVariable).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestDivisionByVariableDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestDivisionByVariableDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestAlias.Float1Job).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestFloat1JobDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestFloat1JobDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestAlias.Float4Job).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestFloat4JobDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestFloat4JobDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestAlias.InPlaceByteJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestInPlaceByteJobDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestInPlaceByteJobDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestAlias.InPlaceJob).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestInPlaceJobDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestInPlaceJobDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestAlias.SimpleSOA1Job).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestSimpleSOA1JobDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestSimpleSOA1JobDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestGenerics.StructWithGenerics).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestGenerics_TestStructWithGenericsDelegate), CallBurst_Compiler_IL_Tests_TestGenerics_TestStructWithGenericsDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestGenerics.StructWithGenerics2).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestGenerics_TestStructWithGenerics2Delegate), CallBurst_Compiler_IL_Tests_TestGenerics_TestStructWithGenerics2Delegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestGenerics.StructWithGenericsAndALongName00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).MakeByRefType(), typeof(Burst.Compiler.IL.Tests.TestGenerics.StructWithGenericsAndALongName00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).MakeByRefType(), typeof(Burst.Compiler.IL.Tests.TestGenerics.StructWithGenericsAndALongName00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestGenerics_TestSymbolLengthDelegate), CallBurst_Compiler_IL_Tests_TestGenerics_TestSymbolLengthDelegate);
            Register(typeof(void),  new Type[] {typeof(Burst.Compiler.IL.Tests.TestStructs.AnsiStruct).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestStructs_TestAnsiStructCharDelegate), CallBurst_Compiler_IL_Tests_TestStructs_TestAnsiStructCharDelegate);
            Register(typeof(void),  new Type[] {typeof(UnityBenchShared.DivisionByScalar).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestPerfNotes_test_division_by_scalarDelegate), CallBurst_Compiler_IL_Tests_TestPerfNotes_test_division_by_scalarDelegate);
            Register(typeof(void),  new Type[] {typeof(UnityBenchShared.IntToFloatPenalty).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestPerfNotes_test_int_to_float_penaltyDelegate), CallBurst_Compiler_IL_Tests_TestPerfNotes_test_int_to_float_penaltyDelegate);
            Register(typeof(void),  new Type[] {typeof(UnityBenchShared.PartialWrite).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestPerfNotes_test_partial_writeDelegate), CallBurst_Compiler_IL_Tests_TestPerfNotes_test_partial_writeDelegate);
            Register(typeof(void),  new Type[] {typeof(UnityBenchShared.PartialWriteWorkaround).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestPerfNotes_test_partial_write_workaroundDelegate), CallBurst_Compiler_IL_Tests_TestPerfNotes_test_partial_write_workaroundDelegate);
            Register(typeof(void),  new Type[] {typeof(UnityBenchShared.RedundantStore).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestPerfNotes_test_redundant_storeDelegate), CallBurst_Compiler_IL_Tests_TestPerfNotes_test_redundant_storeDelegate);
            Register(typeof(void),  new Type[] {typeof(UnityBenchShared.RedundantStoreWorkaround).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestPerfNotes_test_redundant_store_workaroundDelegate), CallBurst_Compiler_IL_Tests_TestPerfNotes_test_redundant_store_workaroundDelegate);
            Register(typeof(void),  new Type[] {typeof(UnityBenchShared.SquareRoot).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestPerfNotes_test_square_rootDelegate), CallBurst_Compiler_IL_Tests_TestPerfNotes_test_square_rootDelegate);
            Register(typeof(void),  new Type[] {typeof(UnityBenchShared.SquareRootRecip).MakeByRefType()}, typeof(Burst_Compiler_IL_Tests_TestPerfNotes_test_square_root_recipDelegate), CallBurst_Compiler_IL_Tests_TestPerfNotes_test_square_root_recipDelegate);
            Register(typeof(void),  new Type[] {typeof(float*), typeof(float*), typeof(float*), typeof(int)}, typeof(Burst_Compiler_IL_Tests_TestAlias_TestDivisionByVariablePtrDelegate), CallBurst_Compiler_IL_Tests_TestAlias_TestDivisionByVariablePtrDelegate);

#endif
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.Pointers.MyCastEnum Burst_Compiler_IL_Tests_Pointers_PointerCastEnumDelegate(int arg0, Burst.Compiler.IL.Tests.Pointers.MyCastEnum arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_PointerCastEnumDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_PointerCastEnumDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            var arg1 = (Burst.Compiler.IL.Tests.Pointers.MyCastEnum)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.Types.MyEnumByte Burst_Compiler_IL_Tests_Types_CheckEnumByteDelegate(ref Burst.Compiler.IL.Tests.Types.MyEnumByte arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Types_CheckEnumByteDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Types_CheckEnumByteDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.Types.MyEnumByte)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate System.IntPtr Burst_Compiler_IL_Tests_Pointers_IntPtrZeroDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_IntPtrZeroDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_IntPtrZeroDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate System.IntPtr Burst_Compiler_IL_Tests_TestAtomics_CompareExchangeIntPtrDelegate(System.IntPtr arg0, System.IntPtr arg1, System.IntPtr arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAtomics_CompareExchangeIntPtrDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAtomics_CompareExchangeIntPtrDelegate)delegateObj;
            object result = null;
            var arg0 = (System.IntPtr)p[0];
            var arg1 = (System.IntPtr)p[1];
            var arg2 = (System.IntPtr)p[2];
            result = d(arg0, arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate System.IntPtr Burst_Compiler_IL_Tests_Pointers_IntPtrAddDelegate(System.IntPtr arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_IntPtrAddDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_IntPtrAddDelegate)delegateObj;
            object result = null;
            var arg0 = (System.IntPtr)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate System.IntPtr Burst_Compiler_IL_Tests_Pointers_IntPtrConstructorDelegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_IntPtrConstructorDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_IntPtrConstructorDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate System.UIntPtr Burst_Compiler_IL_Tests_Pointers_UIntPtrZeroDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_UIntPtrZeroDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_UIntPtrZeroDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate System.UIntPtr Burst_Compiler_IL_Tests_Pointers_UIntPtrAddDelegate(System.UIntPtr arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_UIntPtrAddDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_UIntPtrAddDelegate)delegateObj;
            object result = null;
            var arg0 = (System.UIntPtr)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate System.UIntPtr Burst_Compiler_IL_Tests_Pointers_UIntPtrConstructorDelegate(uint arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_UIntPtrConstructorDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_UIntPtrConstructorDelegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Expressions_ReturnBoolTrueDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ReturnBoolTrueDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ReturnBoolTrueDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Pointers_TestConditionalPointerDelegate(ref Burst.Compiler.IL.Tests.Pointers.PointerConditional arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_TestConditionalPointerDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_TestConditionalPointerDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.Pointers.PointerConditional)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_TestStructs_TestABITransformIntoExplicitLayoutTransformDelegate(Burst.Compiler.IL.Tests.TestStructs.NetworkEndPoint arg0, Burst.Compiler.IL.Tests.TestStructs.NetworkEndPoint arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestStructs_TestABITransformIntoExplicitLayoutTransformDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestStructs_TestABITransformIntoExplicitLayoutTransformDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestStructs.NetworkEndPoint)p[0];
            var arg1 = (Burst.Compiler.IL.Tests.TestStructs.NetworkEndPoint)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Pointers_PointerCompareDelegate(System.IntPtr arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_PointerCompareDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_PointerCompareDelegate)delegateObj;
            object result = null;
            var arg0 = (System.IntPtr)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Types_BoolArgAndReturnDelegate(bool arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Types_BoolArgAndReturnDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Types_BoolArgAndReturnDelegate)delegateObj;
            object result = null;
            var arg0 = (bool)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_TestSystemMath_TestIsNanDoubleDelegate(double arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestSystemMath_TestIsNanDoubleDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestSystemMath_TestIsNanDoubleDelegate)delegateObj;
            object result = null;
            var arg0 = (double)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_TestSystemMath_TestIsNanFloatDelegate(float arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestSystemMath_TestIsNanFloatDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestSystemMath_TestIsNanFloatDelegate)delegateObj;
            object result = null;
            var arg0 = (float)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_NotSupported_TestIsOfTypeDelegate(object arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NotSupported_TestIsOfTypeDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NotSupported_TestIsOfTypeDelegate)delegateObj;
            object result = null;
            var arg0 = (object)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate byte Burst_Compiler_IL_Tests_Expressions_ConvOvfU1Delegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU1Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfU1Delegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate byte Burst_Compiler_IL_Tests_ControlFlows_SwitchOnLongDelegate(long arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ControlFlows_SwitchOnLongDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ControlFlows_SwitchOnLongDelegate)delegateObj;
            object result = null;
            var arg0 = (long)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate double Burst_Compiler_IL_Tests_TestSystemMath_TestMaxDoubleDelegate(double arg0, double arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestSystemMath_TestMaxDoubleDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestSystemMath_TestMaxDoubleDelegate)delegateObj;
            object result = null;
            var arg0 = (double)p[0];
            var arg1 = (double)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate double Burst_Compiler_IL_Tests_TestUnityMath_TestSignDoubleDelegate(double arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestUnityMath_TestSignDoubleDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestUnityMath_TestSignDoubleDelegate)delegateObj;
            object result = null;
            var arg0 = (double)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate double Burst_Compiler_IL_Tests_TestSystemMath_TestPowDelegate(float arg0, float arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestSystemMath_TestPowDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestSystemMath_TestPowDelegate)delegateObj;
            object result = null;
            var arg0 = (float)p[0];
            var arg1 = (float)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate double Burst_Compiler_IL_Tests_TestSystemMath_TestCosDelegate(float arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestSystemMath_TestCosDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestSystemMath_TestCosDelegate)delegateObj;
            object result = null;
            var arg0 = (float)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Types_StructDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_Types_StructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Types_StructDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Expressions_test_expr_add_two_argumentsDelegate(float arg0, float arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_test_expr_add_two_argumentsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_test_expr_add_two_argumentsDelegate)delegateObj;
            object result = null;
            var arg0 = (float)p[0];
            var arg1 = (float)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Expressions_test_expr_add_multiplesDelegate(float arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_test_expr_add_multiplesDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_test_expr_add_multiplesDelegate)delegateObj;
            object result = null;
            var arg0 = (float)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_ControlFlows_ForWhileNestedCallDelegate(int arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_ControlFlows_ForWhileNestedCallDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ControlFlows_ForWhileNestedCallDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            var arg1 = (int)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_ControlFlows_ForDynamicConditionDelegate(ref int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ControlFlows_ForDynamicConditionDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ControlFlows_ForDynamicConditionDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Expressions_ConvertIntToFloatDelegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertIntToFloatDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertIntToFloatDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Types_SizeOfBoolStructDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_Types_SizeOfBoolStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Types_SizeOfBoolStructDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_ControlFlows_SwitchEnumDelegate(Burst.Compiler.IL.Tests.ControlFlows.EnumSwitch arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ControlFlows_SwitchEnumDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ControlFlows_SwitchEnumDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ControlFlows.EnumSwitch)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_NotSupported_TestCharbyValueDelegate(ref Burst.Compiler.IL.Tests.NotSupported.CharbyValueFunc arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_NotSupported_TestCharbyValueDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NotSupported_TestCharbyValueDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NotSupported.CharbyValueFunc)p[0];
            var arg1 = (int)p[1];
            result = d(ref arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Pointers_FixedFieldViaPointerDelegate(ref Burst.Compiler.IL.Tests.Pointers.MyStructWithFixed arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_FixedFieldViaPointerDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_FixedFieldViaPointerDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.Pointers.MyStructWithFixed)p[0];
            var arg1 = (int)p[1];
            result = d(ref arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Pointers_FixedInt32AndRefInt32Delegate(ref Burst.Compiler.IL.Tests.Pointers.MyStructWithFixed arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_FixedInt32AndRefInt32Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_FixedInt32AndRefInt32Delegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.Pointers.MyStructWithFixed)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestEnums_test_enum_compareDelegate(Burst.Compiler.IL.Tests.TestEnums.MyEnum arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestEnums_test_enum_compareDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestEnums_test_enum_compareDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestEnums.MyEnum)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestEnums_test_enum_sizeof_small_enum_in_struct_accessDelegate(Burst.Compiler.IL.Tests.TestEnums.SmallEnum arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestEnums_test_enum_sizeof_small_enum_in_struct_accessDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestEnums_test_enum_sizeof_small_enum_in_struct_accessDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestEnums.SmallEnum)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestStructs_TestExplicitLayoutStructFixedBufferDelegate(ref Burst.Compiler.IL.Tests.TestStructs.ExplicitLayoutStructFixedBuffer arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestStructs_TestExplicitLayoutStructFixedBufferDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestStructs_TestExplicitLayoutStructFixedBufferDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestStructs.ExplicitLayoutStructFixedBuffer)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestStructs_TestSequentialStructWithPaddingAndVectorFieldDelegate(ref Burst.Compiler.IL.Tests.TestStructs.SequentialStructWithPaddingAndVectorField arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestStructs_TestSequentialStructWithPaddingAndVectorFieldDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestStructs_TestSequentialStructWithPaddingAndVectorFieldDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestStructs.SequentialStructWithPaddingAndVectorField)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Types_EnumByParamDelegate(Burst.Compiler.IL.Tests.Types.MyEnum arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Types_EnumByParamDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Types_EnumByParamDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.Types.MyEnum)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestStructs_TestVectorStoreToExplicitStructDelegate(ref Unity.Mathematics.int2 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestStructs_TestVectorStoreToExplicitStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestStructs_TestVectorStoreToExplicitStructDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int2)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Expressions_BrtrueDelegate(bool arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_BrtrueDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_BrtrueDelegate)delegateObj;
            object result = null;
            var arg0 = (bool)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Expressions_ConvertbyteToIntDelegate(byte arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertbyteToIntDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertbyteToIntDelegate)delegateObj;
            object result = null;
            var arg0 = (byte)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestSystemMath_TestSignDoubleDelegate(double arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestSystemMath_TestSignDoubleDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestSystemMath_TestSignDoubleDelegate)delegateObj;
            object result = null;
            var arg0 = (double)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Expressions_test_expr_cast_float_to_intDelegate(float arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_test_expr_cast_float_to_intDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_test_expr_cast_float_to_intDelegate)delegateObj;
            object result = null;
            var arg0 = (float)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_ControlFlows_IfDeepDelegate(int arg0, int arg1, int arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_ControlFlows_IfDeepDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ControlFlows_IfDeepDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            var arg1 = (int)p[1];
            var arg2 = (int)p[2];
            result = d(arg0, arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Expressions_BinaryNumericAddDelegate(int arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_BinaryNumericAddDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_BinaryNumericAddDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            var arg1 = (int)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestAtomics_test_atomic_compare_and_exchange_intDelegate(ref int arg0, int arg1, int arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAtomics_test_atomic_compare_and_exchange_intDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAtomics_test_atomic_compare_and_exchange_intDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            var arg1 = (int)p[1];
            var arg2 = (int)p[2];
            result = d(ref arg0, arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_ControlFlows_WhileDynamicDelegate(ref int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ControlFlows_WhileDynamicDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ControlFlows_WhileDynamicDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Expressions_BltDelegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_BltDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_BltDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private unsafe delegate int Burst_Compiler_IL_Tests_Pointers_UnsafeCompareDelegate(int* arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_UnsafeCompareDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_UnsafeCompareDelegate)delegateObj;
            object result = null;
            var arg0 = (int*)(IntPtr)p[0];
            var arg1 = (int)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_Types_StructAccessDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_Types_StructAccessDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Types_StructAccessDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_TestSystemMath_TestBigMulIntDelegate(int arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestSystemMath_TestBigMulIntDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestSystemMath_TestBigMulIntDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            var arg1 = (int)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_Expressions_ConvertIntToLongDelegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertIntToLongDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertIntToLongDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_TestAtomics_test_atomic_compare_and_exchange_longDelegate(ref long arg0, long arg1, long arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAtomics_test_atomic_compare_and_exchange_longDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAtomics_test_atomic_compare_and_exchange_longDelegate)delegateObj;
            object result = null;
            var arg0 = (long)p[0];
            var arg1 = (long)p[1];
            var arg2 = (long)p[2];
            result = d(ref arg0, arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_TestAtomics_test_atomic_increment_longDelegate(ref long arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAtomics_test_atomic_increment_longDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAtomics_test_atomic_increment_longDelegate)delegateObj;
            object result = null;
            var arg0 = (long)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_TestSystemMath_TestAbsLongDelegate(long arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestSystemMath_TestAbsLongDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestSystemMath_TestAbsLongDelegate)delegateObj;
            object result = null;
            var arg0 = (long)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate sbyte Burst_Compiler_IL_Tests_TestSystemMath_TestAbsSByteDelegate(sbyte arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestSystemMath_TestAbsSByteDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestSystemMath_TestAbsSByteDelegate)delegateObj;
            object result = null;
            var arg0 = (sbyte)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate short Burst_Compiler_IL_Tests_TestSystemMath_TestAbsShortDelegate(short arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestSystemMath_TestAbsShortDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestSystemMath_TestAbsShortDelegate)delegateObj;
            object result = null;
            var arg0 = (short)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate uint Burst_Compiler_IL_Tests_Expressions_ConvertUShortToUIntConstMaxDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertUShortToUIntConstMaxDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertUShortToUIntConstMaxDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate ulong Burst_Compiler_IL_Tests_Expressions_ConvertIntToLongConstDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertIntToLongConstDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertIntToLongConstDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Unity_Mathematics_Tests_TestBitmanipulation_bitmask_bool4Delegate();
        private unsafe static object CallUnity_Mathematics_Tests_TestBitmanipulation_bitmask_bool4Delegate(object delegateObj, object[] p)
        {
            var d = (Unity_Mathematics_Tests_TestBitmanipulation_bitmask_bool4Delegate)delegateObj;
            object result = null;
            d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_NotSupported_TestMethodWithMarshalAsParameterDelegate(bool arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NotSupported_TestMethodWithMarshalAsParameterDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NotSupported_TestMethodWithMarshalAsParameterDelegate)delegateObj;
            object result = null;
            var arg0 = (bool)p[0];
            d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_Pointers_TestCellVisibleInternalDelegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Pointers_TestCellVisibleInternalDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Pointers_TestCellVisibleInternalDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            d(arg0);
            return result;
        }

#if BURST_TESTS_ONLY
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.BigExplicitLayoutStruct Burst_Compiler_IL_Tests_ABI_EntryBigExplicitLayoutStructDelegate(Burst.Compiler.IL.Tests.ABI.BigExplicitLayoutStruct arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntryBigExplicitLayoutStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntryBigExplicitLayoutStructDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.BigExplicitLayoutStruct)p[0];
            var arg1 = (int)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.BigSSEStruct Burst_Compiler_IL_Tests_ABI_EntryBigSSEStructDelegate(Burst.Compiler.IL.Tests.ABI.BigSSEStruct arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntryBigSSEStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntryBigSSEStructDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.BigSSEStruct)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.BigStruct Burst_Compiler_IL_Tests_ABI_EntryPointReturnBigStructDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntryPointReturnBigStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntryPointReturnBigStructDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.EmptyStruct Burst_Compiler_IL_Tests_ABI_TestEmptyStructDelegate(Burst.Compiler.IL.Tests.ABI.EmptyStruct arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_TestEmptyStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_TestEmptyStructDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.EmptyStruct)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.ExplicitButAligned Burst_Compiler_IL_Tests_ABI_EntryExplicitButAlignedDelegate(Burst.Compiler.IL.Tests.ABI.ExplicitButAligned arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntryExplicitButAlignedDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntryExplicitButAlignedDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.ExplicitButAligned)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.IIF Burst_Compiler_IL_Tests_ABI_TestIIFDelegate(Burst.Compiler.IL.Tests.ABI.IIF arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_TestIIFDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_TestIIFDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.IIF)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.KindaBig Burst_Compiler_IL_Tests_ABI_TestKindaBigDelegate(Burst.Compiler.IL.Tests.ABI.KindaBig arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_TestKindaBigDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_TestKindaBigDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.KindaBig)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.OverlappingFieldsStruct Burst_Compiler_IL_Tests_ABI_EntryOverlappingFieldsStructDelegate(Burst.Compiler.IL.Tests.ABI.OverlappingFieldsStruct arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntryOverlappingFieldsStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntryOverlappingFieldsStructDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.OverlappingFieldsStruct)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.SizePaddedBig Burst_Compiler_IL_Tests_ABI_EntrySizeSizePaddedBigDelegate(Burst.Compiler.IL.Tests.ABI.SizePaddedBig arg0, Burst.Compiler.IL.Tests.ABI.SizePaddedBig arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntrySizeSizePaddedBigDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntrySizeSizePaddedBigDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.SizePaddedBig)p[0];
            var arg1 = (Burst.Compiler.IL.Tests.ABI.SizePaddedBig)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.SizePaddedSmall Burst_Compiler_IL_Tests_ABI_EntrySizePaddedSmallDelegate(Burst.Compiler.IL.Tests.ABI.SizePaddedSmall arg0, Burst.Compiler.IL.Tests.ABI.SizePaddedSmall arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntrySizePaddedSmallDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntrySizePaddedSmallDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.SizePaddedSmall)p[0];
            var arg1 = (Burst.Compiler.IL.Tests.ABI.SizePaddedSmall)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.SmallSseUpStruct Burst_Compiler_IL_Tests_ABI_EntrySmallSseUpStructDelegate(Burst.Compiler.IL.Tests.ABI.SmallSseUpStruct arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntrySmallSseUpStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntrySmallSseUpStructDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.SmallSseUpStruct)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.SmallStruct Burst_Compiler_IL_Tests_ABI_EntryPointReturnSmallStructDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntryPointReturnSmallStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntryPointReturnSmallStructDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.UnalignedSmallStruct Burst_Compiler_IL_Tests_ABI_EntryPointReturnUnalignedSmallStructDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntryPointReturnUnalignedSmallStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntryPointReturnUnalignedSmallStructDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.UnalignedSmallStruct Burst_Compiler_IL_Tests_ABI_EntryPointWithUnalignedSmallStructDelegate(Burst.Compiler.IL.Tests.ABI.UnalignedSmallStruct arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntryPointWithUnalignedSmallStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntryPointWithUnalignedSmallStructDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.UnalignedSmallStruct)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate Burst.Compiler.IL.Tests.ABI.UnalignedSmallStructWithPadding Burst_Compiler_IL_Tests_ABI_EntryPointReturnUnalignedSmallStructWithPaddingDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntryPointReturnUnalignedSmallStructWithPaddingDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntryPointReturnUnalignedSmallStructWithPaddingDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_TestStructs_TestCharEqualDelegate(ref Burst.Compiler.IL.Tests.TestStructs.SomeStruct arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestStructs_TestCharEqualDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestStructs_TestCharEqualDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestStructs.SomeStruct)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Maths_AnyBool2Delegate(ref Unity.Mathematics.bool2 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyBool2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_AnyBool2Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.bool2)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Maths_AnyBool3Delegate(ref Unity.Mathematics.bool3 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyBool3Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_AnyBool3Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.bool3)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Maths_AnyBool4Delegate(ref Unity.Mathematics.bool4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyBool4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_AnyBool4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.bool4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Equality_Float2EqualsDelegate(ref Unity.Mathematics.float2 arg0, ref Unity.Mathematics.float2 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Float2EqualsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Float2EqualsDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float2)p[0];
            var arg1 = (Unity.Mathematics.float2)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Maths_AnyDelegate(ref Unity.Mathematics.float2 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_AnyDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float2)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Equality_Float3EqualsDelegate(ref Unity.Mathematics.float3 arg0, ref Unity.Mathematics.float3 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Float3EqualsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Float3EqualsDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float3)p[0];
            var arg1 = (Unity.Mathematics.float3)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Maths_Any32Delegate(ref Unity.Mathematics.float3 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_Any32Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_Any32Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float3)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Equality_Float4EqualsDelegate(ref Unity.Mathematics.float4 arg0, ref Unity.Mathematics.float4 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Float4EqualsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Float4EqualsDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float4)p[0];
            var arg1 = (Unity.Mathematics.float4)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_BinaryOperators_Float4_GreaterThanFloat4FloatUnsafeDelegate(ref Unity.Mathematics.float4 arg0, float arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_BinaryOperators_Float4_GreaterThanFloat4FloatUnsafeDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_BinaryOperators_Float4_GreaterThanFloat4FloatUnsafeDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float4)p[0];
            var arg1 = (float)p[1];
            result = d(ref arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Maths_Any4Delegate(ref Unity.Mathematics.float4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_Any4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_Any4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Equality_Int2EqualsDelegate(ref Unity.Mathematics.int2 arg0, ref Unity.Mathematics.int2 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Int2EqualsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Int2EqualsDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int2)p[0];
            var arg1 = (Unity.Mathematics.int2)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Maths_AnyInt2Delegate(ref Unity.Mathematics.int2 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyInt2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_AnyInt2Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int2)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Equality_Int3EqualsDelegate(ref Unity.Mathematics.int3 arg0, ref Unity.Mathematics.int3 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Int3EqualsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Int3EqualsDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int3)p[0];
            var arg1 = (Unity.Mathematics.int3)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Maths_AnyInt3Delegate(ref Unity.Mathematics.int3 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyInt3Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_AnyInt3Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int3)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Equality_Int4EqualsDelegate(ref Unity.Mathematics.int4 arg0, ref Unity.Mathematics.int4 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Int4EqualsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Int4EqualsDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int4)p[0];
            var arg1 = (Unity.Mathematics.int4)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Vectors_Maths_AnyInt4Delegate(ref Unity.Mathematics.int4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_AnyInt4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_AnyInt4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingAOSDelegate(ref UnityBenchShared.SphereCullingAOSJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestSphereCullingAOSDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingAOSDelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.SphereCullingAOSJob)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingChunkFixedSOADelegate(ref UnityBenchShared.SphereCullingChunkFixedSOAJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestSphereCullingChunkFixedSOADelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingChunkFixedSOADelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.SphereCullingChunkFixedSOAJob)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingChunkSOADelegate(ref UnityBenchShared.SphereCullingChunkSOAJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestSphereCullingChunkSOADelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingChunkSOADelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.SphereCullingChunkSOAJob)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingFloat4AOSDelegate(ref UnityBenchShared.SphereCullingFloat4AOSJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestSphereCullingFloat4AOSDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingFloat4AOSDelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.SphereCullingFloat4AOSJob)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingSOADelegate(ref UnityBenchShared.SphereCullingSOAJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestSphereCullingSOADelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestSphereCullingSOADelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.SphereCullingSOAJob)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Expressions_CompareEqualBoolDelegate(bool arg0, bool arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_CompareEqualBoolDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_CompareEqualBoolDelegate)delegateObj;
            object result = null;
            var arg0 = (bool)p[0];
            var arg1 = (bool)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Expressions_BoolOrFunctionDelegate(bool arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_BoolOrFunctionDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_BoolOrFunctionDelegate)delegateObj;
            object result = null;
            var arg0 = (bool)p[0];
            var arg1 = (int)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Expressions_CompareEqualInt32Delegate(int arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_CompareEqualInt32Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_CompareEqualInt32Delegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            var arg1 = (int)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Expressions_CompareLessThanInt32UInt32Delegate(int arg0, uint arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_CompareLessThanInt32UInt32Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_CompareLessThanInt32UInt32Delegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            var arg1 = (uint)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Expressions_CompareEqualInt32WithConstDelegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_CompareEqualInt32WithConstDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_CompareEqualInt32WithConstDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Expressions_CompareLessThanInt64Int32Delegate(long arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_CompareLessThanInt64Int32Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_CompareLessThanInt64Int32Delegate)delegateObj;
            object result = null;
            var arg0 = (long)p[0];
            var arg1 = (int)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate bool Burst_Compiler_IL_Tests_Expressions_CompareLessThanUInt32Int32Delegate(uint arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_CompareLessThanUInt32Int32Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_CompareLessThanUInt32Int32Delegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            var arg1 = (int)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate byte Burst_Compiler_IL_Tests_Expressions_ConvOvfU1UnDelegate(uint arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU1UnDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfU1UnDelegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate char Burst_Compiler_IL_Tests_TestStructs_TestCharReturnDelegate();
        private unsafe static object CallBurst_Compiler_IL_Tests_TestStructs_TestCharReturnDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestStructs_TestCharReturnDelegate)delegateObj;
            object result = null;
            result = d();
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate double Burst_Compiler_IL_Tests_Vectors_Maths_AbsDouble2Delegate(ref Unity.Mathematics.double2 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_AbsDouble2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_AbsDouble2Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.double2)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate double Burst_Compiler_IL_Tests_Vectors_Maths_AbsDouble3Delegate(ref Unity.Mathematics.double3 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_AbsDouble3Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_AbsDouble3Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.double3)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate double Burst_Compiler_IL_Tests_Vectors_Maths_Cos4dDelegate(ref Unity.Mathematics.double4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_Cos4dDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_Cos4dDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.double4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate double Burst_Compiler_IL_Tests_Vectors_Doubles_Double4Int4Delegate(ref Unity.Mathematics.int4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Doubles_Double4Int4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Doubles_Double4Int4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate double Burst_Compiler_IL_Tests_Vectors_Doubles_Double4IntDelegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Doubles_Double4IntDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Doubles_Double4IntDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetElem_3aDelegate(ref Burst.Compiler.IL.Tests.ChunkedTestDataWrapper arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetElem_3aDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetElem_3aDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ChunkedTestDataWrapper)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Expressions_TestSByteEnumDelegate(Burst.Compiler.IL.Tests.Expressions.SByteEnum arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_TestSByteEnumDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_TestSByteEnumDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.Expressions.SByteEnum)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Expressions_TestUnsignedEnumDelegate(Burst.Compiler.IL.Tests.Expressions.UnsignedEnum arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_TestUnsignedEnumDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_TestUnsignedEnumDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.Expressions.UnsignedEnum)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetElem_3aDelegate(ref Burst.Compiler.IL.Tests.FullSOATestDataWrapper arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetElem_3aDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetElem_3aDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.FullSOATestDataWrapper)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_native_array_with_accessor_path_from_ldfdDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.Climate arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_native_array_with_accessor_path_from_ldfdDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_native_array_with_accessor_path_from_ldfdDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.Climate)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestNativeArraySortCustomItemDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayCustomItem arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestNativeArraySortCustomItemDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestNativeArraySortCustomItemDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayCustomItem)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestGetUnsafeReadOnlyPtrDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayFloat arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestGetUnsafeReadOnlyPtrDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestGetUnsafeReadOnlyPtrDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayFloat)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_expr_native_array_unsafe_ptr_cast_float4_to_floatDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayFloat4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_expr_native_array_unsafe_ptr_cast_float4_to_floatDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_expr_native_array_unsafe_ptr_cast_float4_to_floatDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayFloat4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_NativeContainers_NativeQueues_QueueOverflowDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeQueues.JobData arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeQueues_QueueOverflowDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeQueues_QueueOverflowDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeQueues.JobData)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_NativeContainers_NativeSlices_TestGetUnsafeReadOnlyPtrDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeSlices.NativeSliceFloat arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeSlices_TestGetUnsafeReadOnlyPtrDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeSlices_TestGetUnsafeReadOnlyPtrDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeSlices.NativeSliceFloat)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_NativeContainers_NativeSlices_test_expr_native_slice_unsafe_ptr_cast_float4_to_floatDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeSlices.NativeSliceFloat4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeSlices_test_expr_native_slice_unsafe_ptr_cast_float4_to_floatDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeSlices_test_expr_native_slice_unsafe_ptr_cast_float4_to_floatDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeSlices.NativeSliceFloat4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_TestAlias_TestNoAliasOnNativeArraysWithBigStructsDelegate(ref Burst.Compiler.IL.Tests.TestAlias.BigStructNativeArrayJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestNoAliasOnNativeArraysWithBigStructsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestNoAliasOnNativeArraysWithBigStructsDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestAlias.BigStructNativeArrayJob)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_TestAlias_TestInPlaceFloat3JobDelegate(ref Burst.Compiler.IL.Tests.TestAlias.InPlaceFloat3Job arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestInPlaceFloat3JobDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestInPlaceFloat3JobDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestAlias.InPlaceFloat3Job)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_TestAlias_TestInPlaceFloat4JobDelegate(ref Burst.Compiler.IL.Tests.TestAlias.InPlaceFloat4Job arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestInPlaceFloat4JobDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestInPlaceFloat4JobDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestAlias.InPlaceFloat4Job)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_SelectDelegate(ref Unity.Mathematics.bool2 arg0, ref Unity.Mathematics.float2 arg1, ref Unity.Mathematics.float2 arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_SelectDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_SelectDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.bool2)p[0];
            var arg1 = (Unity.Mathematics.float2)p[1];
            var arg2 = (Unity.Mathematics.float2)p[2];
            result = d(ref arg0, ref arg1, ref arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_Select3Delegate(ref Unity.Mathematics.bool3 arg0, ref Unity.Mathematics.float3 arg1, ref Unity.Mathematics.float3 arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_Select3Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_Select3Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.bool3)p[0];
            var arg1 = (Unity.Mathematics.float3)p[1];
            var arg2 = (Unity.Mathematics.float3)p[2];
            result = d(ref arg0, ref arg1, ref arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_Select4Delegate(ref Unity.Mathematics.bool4 arg0, ref Unity.Mathematics.float4 arg1, ref Unity.Mathematics.float4 arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_Select4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_Select4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.bool4)p[0];
            var arg1 = (Unity.Mathematics.float4)p[1];
            var arg2 = (Unity.Mathematics.float4)p[2];
            result = d(ref arg0, ref arg1, ref arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_Lerp2_2Delegate(ref Unity.Mathematics.float2 arg0, ref Unity.Mathematics.float2 arg1, ref Unity.Mathematics.float2 arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_Lerp2_2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_Lerp2_2Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float2)p[0];
            var arg1 = (Unity.Mathematics.float2)p[1];
            var arg2 = (Unity.Mathematics.float2)p[2];
            result = d(ref arg0, ref arg1, ref arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_Smoothstep2Delegate(ref Unity.Mathematics.float2 arg0, ref Unity.Mathematics.float2 arg1, float arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_Smoothstep2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_Smoothstep2Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float2)p[0];
            var arg1 = (Unity.Mathematics.float2)p[1];
            var arg2 = (float)p[2];
            result = d(ref arg0, ref arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_ATan2_2Delegate(ref Unity.Mathematics.float2 arg0, ref Unity.Mathematics.float2 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_ATan2_2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_ATan2_2Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float2)p[0];
            var arg1 = (Unity.Mathematics.float2)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_Cos2Delegate(ref Unity.Mathematics.float2 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_Cos2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_Cos2Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float2)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_Lerp3_3Delegate(ref Unity.Mathematics.float3 arg0, ref Unity.Mathematics.float3 arg1, ref Unity.Mathematics.float3 arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_Lerp3_3Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_Lerp3_3Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float3)p[0];
            var arg1 = (Unity.Mathematics.float3)p[1];
            var arg2 = (Unity.Mathematics.float3)p[2];
            result = d(ref arg0, ref arg1, ref arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_Smoothstep3Delegate(ref Unity.Mathematics.float3 arg0, ref Unity.Mathematics.float3 arg1, float arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_Smoothstep3Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_Smoothstep3Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float3)p[0];
            var arg1 = (Unity.Mathematics.float3)p[1];
            var arg2 = (float)p[2];
            result = d(ref arg0, ref arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_ATan2_3Delegate(ref Unity.Mathematics.float3 arg0, ref Unity.Mathematics.float3 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_ATan2_3Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_ATan2_3Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float3)p[0];
            var arg1 = (Unity.Mathematics.float3)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Indexers_Float3_get_IndexerByRefDelegate(ref Unity.Mathematics.float3 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Indexers_Float3_get_IndexerByRefDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Indexers_Float3_get_IndexerByRefDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float3)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_Lerp4_4Delegate(ref Unity.Mathematics.float4 arg0, ref Unity.Mathematics.float4 arg1, ref Unity.Mathematics.float4 arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_Lerp4_4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_Lerp4_4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float4)p[0];
            var arg1 = (Unity.Mathematics.float4)p[1];
            var arg2 = (Unity.Mathematics.float4)p[2];
            result = d(ref arg0, ref arg1, ref arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_Smoothstep4Delegate(ref Unity.Mathematics.float4 arg0, ref Unity.Mathematics.float4 arg1, float arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_Smoothstep4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_Smoothstep4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float4)p[0];
            var arg1 = (Unity.Mathematics.float4)p[1];
            var arg2 = (float)p[2];
            result = d(ref arg0, ref arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_ATan2_4Delegate(ref Unity.Mathematics.float4 arg0, ref Unity.Mathematics.float4 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_ATan2_4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_ATan2_4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float4)p[0];
            var arg1 = (Unity.Mathematics.float4)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Deterministic_CosFloat4Delegate(ref Unity.Mathematics.float4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Deterministic_CosFloat4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Deterministic_CosFloat4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_AsFloatInt2Delegate(ref Unity.Mathematics.int2 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_AsFloatInt2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_AsFloatInt2Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int2)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_AsFloatInt3Delegate(ref Unity.Mathematics.int3 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_AsFloatInt3Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_AsFloatInt3Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int3)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Constructors_Float4Int4Delegate(ref Unity.Mathematics.int4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Constructors_Float4Int4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Constructors_Float4Int4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_AsFloatUInt4Delegate(ref Unity.Mathematics.uint4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_AsFloatUInt4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_AsFloatUInt4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.uint4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_TestSumNumbers_SumNunbersDelegate(ref UnityBenchShared.SumNumbersTest arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestSumNumbers_SumNunbersDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestSumNumbers_SumNunbersDelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.SumNumbersTest)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_TestBoids_test_boids_jobDelegate(ref UnityEngine.Boids.BoidsJob arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestBoids_test_boids_jobDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestBoids_test_boids_jobDelegate)delegateObj;
            object result = null;
            var arg0 = (UnityEngine.Boids.BoidsJob)p[0];
            var arg1 = (int)p[1];
            result = d(ref arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Vectors_Maths_SmoothstepDelegate(float arg0, float arg1, float arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_SmoothstepDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_SmoothstepDelegate)delegateObj;
            object result = null;
            var arg0 = (float)p[0];
            var arg1 = (float)p[1];
            var arg2 = (float)p[2];
            result = d(arg0, arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate float Burst_Compiler_IL_Tests_Expressions_ConvertUIntToFloatDelegate(uint arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertUIntToFloatDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertUIntToFloatDelegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_ABI_EntryPointWithBigStructDelegate(Burst.Compiler.IL.Tests.ABI.BigStruct arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntryPointWithBigStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntryPointWithBigStructDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.BigStruct)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_ABI_EntryPointWithSmallStructDelegate(Burst.Compiler.IL.Tests.ABI.SmallStruct arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntryPointWithSmallStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntryPointWithSmallStructDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.SmallStruct)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetLengthDelegate(ref Burst.Compiler.IL.Tests.ChunkedTestDataWrapper arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetLengthDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetLengthDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ChunkedTestDataWrapper)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetLengthDelegate(ref Burst.Compiler.IL.Tests.FullSOATestDataWrapper arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetLengthDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetLengthDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.FullSOATestDataWrapper)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestArrayBoolAccessReadDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayBool arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestArrayBoolAccessReadDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_TestArrayBoolAccessReadDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayBool)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_expr_native_array_int_copy_arrayDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayIntCopy arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_expr_native_array_int_copy_arrayDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArrays_test_expr_native_array_int_copy_arrayDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayIntCopy)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_NativeContainers_NativeMultiHashMaps_TestReadWriteDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeMultiHashMaps.JobData arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeMultiHashMaps_TestReadWriteDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeMultiHashMaps_TestReadWriteDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeMultiHashMaps.JobData)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_NativeContainers_NativeSlices_test_expr_native_slice_int_copy_sliceDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeSlices.NativeSliceIntCopy arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeSlices_test_expr_native_slice_int_copy_sliceDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeSlices_test_expr_native_slice_int_copy_sliceDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeSlices.NativeSliceIntCopy)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestCullingJob_test_culling_job_simpleDelegate(ref Burst.Compiler.IL.Tests.TestCullingJob.CullingJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestCullingJob_test_culling_job_simpleDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestCullingJob_test_culling_job_simpleDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestCullingJob.CullingJob)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerWithBigStructDelegate(Burst.Compiler.IL.Tests.TestFunctionPointers.FPBigStructFunc arg0, Burst.Compiler.IL.Tests.ABI.BigStruct arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerWithBigStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerWithBigStructDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestFunctionPointers.FPBigStructFunc)p[0];
            var arg1 = (Burst.Compiler.IL.Tests.ABI.BigStruct)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestFunctionPointers_TestAddTwoNumbersByInDelegate(ref Burst.Compiler.IL.Tests.TestFunctionPointers.FPInIntFunc arg0, int arg1, int arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestFunctionPointers_TestAddTwoNumbersByInDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestFunctionPointers_TestAddTwoNumbersByInDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestFunctionPointers.FPInIntFunc)p[0];
            var arg1 = (int)p[1];
            var arg2 = (int)p[2];
            result = d(ref arg0, arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerDynamicInvokeDelegate(ref Burst.Compiler.IL.Tests.TestFunctionPointers.FPIntFunc arg0, ref Burst.Compiler.IL.Tests.TestFunctionPointers.FPIntFunc arg1, ref Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayFloat arg2, int arg3);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerDynamicInvokeDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerDynamicInvokeDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestFunctionPointers.FPIntFunc)p[0];
            var arg1 = (Burst.Compiler.IL.Tests.TestFunctionPointers.FPIntFunc)p[1];
            var arg2 = (Burst.Compiler.IL.Tests.NativeContainers.NativeArrays.NativeArrayFloat)p[2];
            var arg3 = (int)p[3];
            result = d(ref arg0, ref arg1, ref arg2, arg3);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerInvokeDelegate(ref Burst.Compiler.IL.Tests.TestFunctionPointers.FPIntFunc arg0, ref Burst.Compiler.IL.Tests.TestFunctionPointers.FPIntFunc arg1, int arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerInvokeDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestFunctionPointers_TestFunctionPointerInvokeDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestFunctionPointers.FPIntFunc)p[0];
            var arg1 = (Burst.Compiler.IL.Tests.TestFunctionPointers.FPIntFunc)p[1];
            var arg2 = (int)p[2];
            result = d(ref arg0, ref arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestFunctionPointers_TestReturnRefReadOnlyDelegate(ref Burst.Compiler.IL.Tests.TestFunctionPointers.ReturnRefReadOnlyFunc arg0, int arg1, int arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestFunctionPointers_TestReturnRefReadOnlyDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestFunctionPointers_TestReturnRefReadOnlyDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestFunctionPointers.ReturnRefReadOnlyFunc)p[0];
            var arg1 = (int)p[1];
            var arg2 = (int)p[2];
            result = d(ref arg0, arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestFunctionPointers_TestAddTwoStructsByInDelegate(ref Burst.Compiler.IL.Tests.TestFunctionPointers.StructsInFunc arg0, int arg1, int arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestFunctionPointers_TestAddTwoStructsByInDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestFunctionPointers_TestAddTwoStructsByInDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestFunctionPointers.StructsInFunc)p[0];
            var arg1 = (int)p[1];
            var arg2 = (int)p[2];
            result = d(ref arg0, arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestGenerics_ExecuteAudioBugDelegate(ref Burst.Compiler.IL.Tests.TestGenerics.TestJob arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestGenerics_ExecuteAudioBugDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestGenerics_ExecuteAudioBugDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestGenerics.TestJob)p[0];
            var arg1 = (int)p[1];
            result = d(ref arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestStructs_TestNestedStructCharDelegate(ref Burst.Compiler.IL.Tests.TestStructs.ParentStruct arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestStructs_TestNestedStructCharDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestStructs_TestNestedStructCharDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestStructs.ParentStruct)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestStructs_TestStructCharDelegate(ref Burst.Compiler.IL.Tests.TestStructs.SomeStruct arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestStructs_TestStructCharDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestStructs_TestStructCharDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestStructs.SomeStruct)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestStructs_TestStaticReadonlyCharInStructLhsDelegate(ref Burst.Compiler.IL.Tests.TestStructs.StaticCharStruct arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestStructs_TestStaticReadonlyCharInStructLhsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestStructs_TestStaticReadonlyCharInStructLhsDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestStructs.StaticCharStruct)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestUnsafeUtilityEx_TestMemSet0Delegate(ref Burst.Compiler.IL.Tests.TestUnsafeUtilityEx.NativeArrayInt arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestUnsafeUtilityEx_TestMemSet0Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestUnsafeUtilityEx_TestMemSet0Delegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestUnsafeUtilityEx.NativeArrayInt)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Bools_Bool2NotDelegate(ref Unity.Mathematics.bool2 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Bools_Bool2NotDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Bools_Bool2NotDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.bool2)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Bools_Bool3NotDelegate(ref Unity.Mathematics.bool3 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Bools_Bool3NotDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Bools_Bool3NotDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.bool3)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Masks_TestSimpleMaskBool4Delegate(ref Unity.Mathematics.bool4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Masks_TestSimpleMaskBool4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Masks_TestSimpleMaskBool4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.bool4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Equality_Float2EqualityDelegate(ref Unity.Mathematics.float2 arg0, ref Unity.Mathematics.float2 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Float2EqualityDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Float2EqualityDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float2)p[0];
            var arg1 = (Unity.Mathematics.float2)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Equality_Float2EqualityWithFloatDelegate(ref Unity.Mathematics.float2 arg0, float arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Float2EqualityWithFloatDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Float2EqualityWithFloatDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float2)p[0];
            var arg1 = (float)p[1];
            result = d(ref arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_HashCodes_Float2GetHashCodeDelegate(ref Unity.Mathematics.float2 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_HashCodes_Float2GetHashCodeDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_HashCodes_Float2GetHashCodeDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float2)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Equality_Float3EqualityDelegate(ref Unity.Mathematics.float3 arg0, ref Unity.Mathematics.float3 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Float3EqualityDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Float3EqualityDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float3)p[0];
            var arg1 = (Unity.Mathematics.float3)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Equality_Float3EqualityWithFloatDelegate(ref Unity.Mathematics.float3 arg0, float arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Float3EqualityWithFloatDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Float3EqualityWithFloatDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float3)p[0];
            var arg1 = (float)p[1];
            result = d(ref arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_RegressionsInBurstV1_TestRegressionIssue133Delegate(ref Unity.Mathematics.float3 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_RegressionsInBurstV1_TestRegressionIssue133Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_RegressionsInBurstV1_TestRegressionIssue133Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float3)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Masks_TestSimpleMaskFloat4Delegate(ref Unity.Mathematics.float4 arg0, ref Unity.Mathematics.float4 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Masks_TestSimpleMaskFloat4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Masks_TestSimpleMaskFloat4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float4)p[0];
            var arg1 = (Unity.Mathematics.float4)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Equality_Float4EqualityWithFloatDelegate(ref Unity.Mathematics.float4 arg0, float arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Float4EqualityWithFloatDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Float4EqualityWithFloatDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float4)p[0];
            var arg1 = (float)p[1];
            result = d(ref arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_HashCodes_Float4GetHashCodeDelegate(ref Unity.Mathematics.float4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_HashCodes_Float4GetHashCodeDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_HashCodes_Float4GetHashCodeDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.float4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Maths_ClampInt2Delegate(ref Unity.Mathematics.int2 arg0, ref Unity.Mathematics.int2 arg1, ref Unity.Mathematics.int2 arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_ClampInt2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_ClampInt2Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int2)p[0];
            var arg1 = (Unity.Mathematics.int2)p[1];
            var arg2 = (Unity.Mathematics.int2)p[2];
            result = d(ref arg0, ref arg1, ref arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Equality_Int2EqualityDelegate(ref Unity.Mathematics.int2 arg0, ref Unity.Mathematics.int2 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Int2EqualityDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Int2EqualityDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int2)p[0];
            var arg1 = (Unity.Mathematics.int2)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Equality_Int2EqualityWithIntDelegate(ref Unity.Mathematics.int2 arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Int2EqualityWithIntDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Int2EqualityWithIntDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int2)p[0];
            var arg1 = (int)p[1];
            result = d(ref arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Maths_ClampInt3Delegate(ref Unity.Mathematics.int3 arg0, ref Unity.Mathematics.int3 arg1, ref Unity.Mathematics.int3 arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_ClampInt3Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_ClampInt3Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int3)p[0];
            var arg1 = (Unity.Mathematics.int3)p[1];
            var arg2 = (Unity.Mathematics.int3)p[2];
            result = d(ref arg0, ref arg1, ref arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Equality_Int3EqualityDelegate(ref Unity.Mathematics.int3 arg0, ref Unity.Mathematics.int3 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Int3EqualityDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Int3EqualityDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int3)p[0];
            var arg1 = (Unity.Mathematics.int3)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Equality_Int3EqualityWithIntDelegate(ref Unity.Mathematics.int3 arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Int3EqualityWithIntDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Int3EqualityWithIntDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int3)p[0];
            var arg1 = (int)p[1];
            result = d(ref arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_HashCodes_Int3GetHashCodeDelegate(ref Unity.Mathematics.int3 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_HashCodes_Int3GetHashCodeDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_HashCodes_Int3GetHashCodeDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int3)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Maths_CompressInt4Delegate(ref Unity.Mathematics.int4 arg0, ref Unity.Mathematics.bool4 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_CompressInt4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_CompressInt4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int4)p[0];
            var arg1 = (Unity.Mathematics.bool4)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Maths_ClampInt4Delegate(ref Unity.Mathematics.int4 arg0, ref Unity.Mathematics.int4 arg1, ref Unity.Mathematics.int4 arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_ClampInt4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_ClampInt4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int4)p[0];
            var arg1 = (Unity.Mathematics.int4)p[1];
            var arg2 = (Unity.Mathematics.int4)p[2];
            result = d(ref arg0, ref arg1, ref arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Equality_Int4EqualityDelegate(ref Unity.Mathematics.int4 arg0, ref Unity.Mathematics.int4 arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Int4EqualityDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Int4EqualityDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int4)p[0];
            var arg1 = (Unity.Mathematics.int4)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Equality_Int4EqualityWithIntDelegate(ref Unity.Mathematics.int4 arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Equality_Int4EqualityWithIntDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Equality_Int4EqualityWithIntDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int4)p[0];
            var arg1 = (int)p[1];
            result = d(ref arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_HashCodes_Int4GetHashCodeDelegate(ref Unity.Mathematics.int4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_HashCodes_Int4GetHashCodeDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_HashCodes_Int4GetHashCodeDelegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.int4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt2Delegate(ref Unity.Mathematics.uint2 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt2Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.uint2)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt3Delegate(ref Unity.Mathematics.uint3 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt3Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt3Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.uint3)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt4Delegate(ref Unity.Mathematics.uint4 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_CountBitsUInt4Delegate)delegateObj;
            object result = null;
            var arg0 = (Unity.Mathematics.uint4)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Constructors_Bool44BoolsDelegate(bool arg0, bool arg1, bool arg2, bool arg3);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Constructors_Bool44BoolsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Constructors_Bool44BoolsDelegate)delegateObj;
            object result = null;
            var arg0 = (bool)p[0];
            var arg1 = (bool)p[1];
            var arg2 = (bool)p[2];
            var arg3 = (bool)p[3];
            result = d(arg0, arg1, arg2, arg3);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Constructors_Bool33BoolsDelegate(bool arg0, bool arg1, bool arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Constructors_Bool33BoolsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Constructors_Bool33BoolsDelegate)delegateObj;
            object result = null;
            var arg0 = (bool)p[0];
            var arg1 = (bool)p[1];
            var arg2 = (bool)p[2];
            result = d(arg0, arg1, arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Constructors_Bool22IntsDelegate(bool arg0, bool arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Constructors_Bool22IntsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Constructors_Bool22IntsDelegate)delegateObj;
            object result = null;
            var arg0 = (bool)p[0];
            var arg1 = (bool)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Expressions_ConvertByteToFloatToByteDelegate(byte arg0, float arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertByteToFloatToByteDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertByteToFloatToByteDelegate)delegateObj;
            object result = null;
            var arg0 = (byte)p[0];
            var arg1 = (float)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestStructs_TestCharByRefDelegate(ref char arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestStructs_TestCharByRefDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestStructs_TestCharByRefDelegate)delegateObj;
            object result = null;
            var arg0 = (char)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_TestStructs_TestCharByValDelegate(char arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestStructs_TestCharByValDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestStructs_TestCharByValDelegate)delegateObj;
            object result = null;
            var arg0 = (char)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_BinaryOperators_Float2_EqualityDelegate(float arg0, float arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_BinaryOperators_Float2_EqualityDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_BinaryOperators_Float2_EqualityDelegate)delegateObj;
            object result = null;
            var arg0 = (float)p[0];
            var arg1 = (float)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_ABI_EntryNoRegistersForStructDelegate(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5, Burst.Compiler.IL.Tests.ABI.SmallStruct arg6);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_EntryNoRegistersForStructDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_EntryNoRegistersForStructDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            var arg1 = (int)p[1];
            var arg2 = (int)p[2];
            var arg3 = (int)p[3];
            var arg4 = (int)p[4];
            var arg5 = (int)p[5];
            var arg6 = (Burst.Compiler.IL.Tests.ABI.SmallStruct)p[6];
            result = d(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_ByRef_ByRefChangeDelegate(ref int arg0, ref int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_ByRef_ByRefChangeDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ByRef_ByRefChangeDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            var arg1 = (int)p[1];
            result = d(ref arg0, ref arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Expressions_ConvOvfI4Delegate(long arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfI4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfI4Delegate)delegateObj;
            object result = null;
            var arg0 = (long)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Expressions_ConvertShortToIntDelegate(short arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertShortToIntDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertShortToIntDelegate)delegateObj;
            object result = null;
            var arg0 = (short)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Expressions_BinaryNumericShiftRightUIntToInt32Delegate(uint arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_BinaryNumericShiftRightUIntToInt32Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_BinaryNumericShiftRightUIntToInt32Delegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            var arg1 = (int)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Expressions_ConvOvfI4UnDelegate(uint arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfI4UnDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfI4UnDelegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate int Burst_Compiler_IL_Tests_Vectors_Maths_CountBitsULongDelegate(ulong arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Vectors_Maths_CountBitsULongDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Vectors_Maths_CountBitsULongDelegate)delegateObj;
            object result = null;
            var arg0 = (ulong)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_Expressions_ConvertbyteToLongDelegate(byte arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertbyteToLongDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertbyteToLongDelegate)delegateObj;
            object result = null;
            var arg0 = (byte)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_Expressions_ConvOvfI8Delegate(double arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfI8Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfI8Delegate)delegateObj;
            object result = null;
            var arg0 = (double)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_Expressions_BinaryNumericDiv64Delegate(long arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_BinaryNumericDiv64Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_BinaryNumericDiv64Delegate)delegateObj;
            object result = null;
            var arg0 = (long)p[0];
            var arg1 = (int)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_Expressions_ConvertSbyteToLongDelegate(sbyte arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertSbyteToLongDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertSbyteToLongDelegate)delegateObj;
            object result = null;
            var arg0 = (sbyte)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_Expressions_ConvertShortToLongDelegate(short arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertShortToLongDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertShortToLongDelegate)delegateObj;
            object result = null;
            var arg0 = (short)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_Expressions_ConvertUIntToLongDelegate(uint arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertUIntToLongDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertUIntToLongDelegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate long Burst_Compiler_IL_Tests_Expressions_ConvOvfI8UnDelegate(ulong arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfI8UnDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfI8UnDelegate)delegateObj;
            object result = null;
            var arg0 = (ulong)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate sbyte Burst_Compiler_IL_Tests_Expressions_ConvI1Delegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvI1Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvI1Delegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate sbyte Burst_Compiler_IL_Tests_Expressions_ConvOvfI1UnDelegate(uint arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfI1UnDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfI1UnDelegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate short Burst_Compiler_IL_Tests_Expressions_ConvI2Delegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvI2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvI2Delegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate short Burst_Compiler_IL_Tests_Expressions_ConvOvfI2UnDelegate(uint arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfI2UnDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfI2UnDelegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate uint Burst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetElem_3cDelegate(ref Burst.Compiler.IL.Tests.ChunkedTestDataWrapper arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetElem_3cDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestGetElem_3cDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ChunkedTestDataWrapper)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate uint Burst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetElem_3cDelegate(ref Burst.Compiler.IL.Tests.FullSOATestDataWrapper arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetElem_3cDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestGetElem_3cDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.FullSOATestDataWrapper)p[0];
            result = d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate uint Burst_Compiler_IL_Tests_Expressions_ConvOvfU4Delegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU4Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfU4Delegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate uint Burst_Compiler_IL_Tests_Expressions_ConvertSbyteToUIntDelegate(sbyte arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertSbyteToUIntDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertSbyteToUIntDelegate)delegateObj;
            object result = null;
            var arg0 = (sbyte)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate uint Burst_Compiler_IL_Tests_Expressions_BinaryNumericShiftLeftUInt32Delegate(uint arg0, int arg1);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_BinaryNumericShiftLeftUInt32Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_BinaryNumericShiftLeftUInt32Delegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            var arg1 = (int)p[1];
            result = d(arg0, arg1);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate uint Burst_Compiler_IL_Tests_Expressions_BgtUnDelegate(uint arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_BgtUnDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_BgtUnDelegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate uint Burst_Compiler_IL_Tests_Expressions_ConvOvfU4UnDelegate(ulong arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU4UnDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfU4UnDelegate)delegateObj;
            object result = null;
            var arg0 = (ulong)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate ulong Burst_Compiler_IL_Tests_Expressions_ConvOvfU8Delegate(double arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU8Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfU8Delegate)delegateObj;
            object result = null;
            var arg0 = (double)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate ulong Burst_Compiler_IL_Tests_Expressions_ConvertIntToULongDelegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertIntToULongDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertIntToULongDelegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate ulong Burst_Compiler_IL_Tests_Expressions_ConvertShortToULongDelegate(short arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertShortToULongDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertShortToULongDelegate)delegateObj;
            object result = null;
            var arg0 = (short)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate ulong Burst_Compiler_IL_Tests_Expressions_ConvertUIntToULongDelegate(uint arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvertUIntToULongDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvertUIntToULongDelegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate ushort Burst_Compiler_IL_Tests_Expressions_ConvOvfU2Delegate(int arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfU2Delegate)delegateObj;
            object result = null;
            var arg0 = (int)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate ushort Burst_Compiler_IL_Tests_Expressions_ConvOvfU2UnDelegate(uint arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Expressions_ConvOvfU2UnDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Expressions_ConvOvfU2UnDelegate)delegateObj;
            object result = null;
            var arg0 = (uint)p[0];
            result = d(arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_ABI_TestABIRegressionDelegate(ref Burst.Compiler.IL.Tests.ABI.CullChunksWrapper arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_ABI_TestABIRegressionDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_ABI_TestABIRegressionDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ABI.CullChunksWrapper)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_Case1061135_TestNewMoveDiscardDelegate(ref Burst.Compiler.IL.Tests.Case1061135.NewMoveJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_Case1061135_TestNewMoveDiscardDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_Case1061135_TestNewMoveDiscardDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.Case1061135.NewMoveJob)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestSetElemDelegate(ref Burst.Compiler.IL.Tests.ChunkedTestDataWrapper arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestSetElemDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArraysChunked_TestSetElemDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.ChunkedTestDataWrapper)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestSetElemDelegate(ref Burst.Compiler.IL.Tests.FullSOATestDataWrapper arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestSetElemDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeArraysFullSOA_TestSetElemDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.FullSOATestDataWrapper)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_NativeContainers_NativeHashMaps_TestIssueWithHashMapDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeHashMaps.HashMapJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeHashMaps_TestIssueWithHashMapDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeHashMaps_TestIssueWithHashMapDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeHashMaps.HashMapJob)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_NativeContainers_NativeMultiHashMaps_TestIssueHashMapAndQueueDelegate(ref Burst.Compiler.IL.Tests.NativeContainers.NativeMultiHashMaps.HashMapAndQueueJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_NativeContainers_NativeMultiHashMaps_TestIssueHashMapAndQueueDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_NativeContainers_NativeMultiHashMaps_TestIssueHashMapAndQueueDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.NativeContainers.NativeMultiHashMaps.HashMapAndQueueJob)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_RegressionsInBurstV1_TestBVHDelegate(ref Burst.Compiler.IL.Tests.RegressionsInBurstV1.StructBVHTest arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_RegressionsInBurstV1_TestBVHDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_RegressionsInBurstV1_TestBVHDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.RegressionsInBurstV1.StructBVHTest)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_RegressionsInBurstV1_TestStructInitDelegate(ref Burst.Compiler.IL.Tests.RegressionsInBurstV1.StructInitJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_RegressionsInBurstV1_TestStructInitDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_RegressionsInBurstV1_TestStructInitDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.RegressionsInBurstV1.StructInitJob)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestAlias_TestCopyJobDelegate(ref Burst.Compiler.IL.Tests.TestAlias.CopyJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestCopyJobDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestCopyJobDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestAlias.CopyJob)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestAlias_TestCopyWithExplicitNoAliasDelegate(ref Burst.Compiler.IL.Tests.TestAlias.CopyWithExplicitNoAlias arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestCopyWithExplicitNoAliasDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestCopyWithExplicitNoAliasDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestAlias.CopyWithExplicitNoAlias)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestAlias_TestDivisionByVariableDelegate(ref Burst.Compiler.IL.Tests.TestAlias.DivisionByVariable arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestDivisionByVariableDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestDivisionByVariableDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestAlias.DivisionByVariable)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestAlias_TestFloat1JobDelegate(ref Burst.Compiler.IL.Tests.TestAlias.Float1Job arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestFloat1JobDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestFloat1JobDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestAlias.Float1Job)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestAlias_TestFloat4JobDelegate(ref Burst.Compiler.IL.Tests.TestAlias.Float4Job arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestFloat4JobDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestFloat4JobDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestAlias.Float4Job)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestAlias_TestInPlaceByteJobDelegate(ref Burst.Compiler.IL.Tests.TestAlias.InPlaceByteJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestInPlaceByteJobDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestInPlaceByteJobDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestAlias.InPlaceByteJob)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestAlias_TestInPlaceJobDelegate(ref Burst.Compiler.IL.Tests.TestAlias.InPlaceJob arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestInPlaceJobDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestInPlaceJobDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestAlias.InPlaceJob)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestAlias_TestSimpleSOA1JobDelegate(ref Burst.Compiler.IL.Tests.TestAlias.SimpleSOA1Job arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestSimpleSOA1JobDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestSimpleSOA1JobDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestAlias.SimpleSOA1Job)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestGenerics_TestStructWithGenericsDelegate(ref Burst.Compiler.IL.Tests.TestGenerics.StructWithGenerics arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestGenerics_TestStructWithGenericsDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestGenerics_TestStructWithGenericsDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestGenerics.StructWithGenerics)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestGenerics_TestStructWithGenerics2Delegate(ref Burst.Compiler.IL.Tests.TestGenerics.StructWithGenerics2 arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestGenerics_TestStructWithGenerics2Delegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestGenerics_TestStructWithGenerics2Delegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestGenerics.StructWithGenerics2)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestGenerics_TestSymbolLengthDelegate(ref Burst.Compiler.IL.Tests.TestGenerics.StructWithGenericsAndALongName00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 arg0, ref Burst.Compiler.IL.Tests.TestGenerics.StructWithGenericsAndALongName00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 arg1, ref Burst.Compiler.IL.Tests.TestGenerics.StructWithGenericsAndALongName00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 arg2);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestGenerics_TestSymbolLengthDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestGenerics_TestSymbolLengthDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestGenerics.StructWithGenericsAndALongName00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)p[0];
            var arg1 = (Burst.Compiler.IL.Tests.TestGenerics.StructWithGenericsAndALongName00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)p[1];
            var arg2 = (Burst.Compiler.IL.Tests.TestGenerics.StructWithGenericsAndALongName00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)p[2];
            d(ref arg0, ref arg1, ref arg2);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestStructs_TestAnsiStructCharDelegate(ref Burst.Compiler.IL.Tests.TestStructs.AnsiStruct arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestStructs_TestAnsiStructCharDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestStructs_TestAnsiStructCharDelegate)delegateObj;
            object result = null;
            var arg0 = (Burst.Compiler.IL.Tests.TestStructs.AnsiStruct)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestPerfNotes_test_division_by_scalarDelegate(ref UnityBenchShared.DivisionByScalar arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestPerfNotes_test_division_by_scalarDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestPerfNotes_test_division_by_scalarDelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.DivisionByScalar)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestPerfNotes_test_int_to_float_penaltyDelegate(ref UnityBenchShared.IntToFloatPenalty arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestPerfNotes_test_int_to_float_penaltyDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestPerfNotes_test_int_to_float_penaltyDelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.IntToFloatPenalty)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestPerfNotes_test_partial_writeDelegate(ref UnityBenchShared.PartialWrite arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestPerfNotes_test_partial_writeDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestPerfNotes_test_partial_writeDelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.PartialWrite)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestPerfNotes_test_partial_write_workaroundDelegate(ref UnityBenchShared.PartialWriteWorkaround arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestPerfNotes_test_partial_write_workaroundDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestPerfNotes_test_partial_write_workaroundDelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.PartialWriteWorkaround)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestPerfNotes_test_redundant_storeDelegate(ref UnityBenchShared.RedundantStore arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestPerfNotes_test_redundant_storeDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestPerfNotes_test_redundant_storeDelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.RedundantStore)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestPerfNotes_test_redundant_store_workaroundDelegate(ref UnityBenchShared.RedundantStoreWorkaround arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestPerfNotes_test_redundant_store_workaroundDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestPerfNotes_test_redundant_store_workaroundDelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.RedundantStoreWorkaround)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestPerfNotes_test_square_rootDelegate(ref UnityBenchShared.SquareRoot arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestPerfNotes_test_square_rootDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestPerfNotes_test_square_rootDelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.SquareRoot)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private delegate void Burst_Compiler_IL_Tests_TestPerfNotes_test_square_root_recipDelegate(ref UnityBenchShared.SquareRootRecip arg0);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestPerfNotes_test_square_root_recipDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestPerfNotes_test_square_root_recipDelegate)delegateObj;
            object result = null;
            var arg0 = (UnityBenchShared.SquareRootRecip)p[0];
            d(ref arg0);
            return result;
        }
        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        private unsafe delegate void Burst_Compiler_IL_Tests_TestAlias_TestDivisionByVariablePtrDelegate(float* arg0, float* arg1, float* arg2, int arg3);
        private unsafe static object CallBurst_Compiler_IL_Tests_TestAlias_TestDivisionByVariablePtrDelegate(object delegateObj, object[] p)
        {
            var d = (Burst_Compiler_IL_Tests_TestAlias_TestDivisionByVariablePtrDelegate)delegateObj;
            object result = null;
            var arg0 = (float*)(IntPtr)p[0];
            var arg1 = (float*)(IntPtr)p[1];
            var arg2 = (float*)(IntPtr)p[2];
            var arg3 = (int)p[3];
            d(arg0, arg1, arg2, arg3);
            return result;
        }

#endif
    }
}
